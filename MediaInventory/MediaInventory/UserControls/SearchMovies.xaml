<UserControl x:Class="MediaInventory.UserControls.SearchMovies"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:local="clr-namespace:MediaInventory.UserControls"
             xmlns:uc="clr-namespace:MediaInventory.UserControls"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Focusable="True"
             IsTabStop="True"
             Loaded="searchMovies_Loaded"
             x:Name="searchMovies">

    <UserControl.Resources>
        <CollectionViewSource x:Key="cvsInventory">
            
        </CollectionViewSource>
        <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="White" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <DockPanel Margin="5, 0, 5, 5" LastChildFill="True" HorizontalAlignment="Stretch">
        <uc:AnimatedWatermarkTextBox x:Name="txtSearchCriteria" DockPanel.Dock="Top" Margin="5" HeaderText="Search Movies..." />
        <GroupBox DockPanel.Dock="Top" Header="Group By" Margin="5" HorizontalAlignment="Left" Padding="5, 5, 7, 2">
            <StackPanel Orientation="Horizontal">
                <RadioButton x:Name="rdoFormat" Content="Format" GroupName="GroupFilter" Click="OnGroupByChanged" />
                <RadioButton x:Name="rdoStatus" Content="Check Status" GroupName="GroupFilter" Click="OnGroupByChanged" />
                <RadioButton x:Name="rdoOwned" Content="Owned" GroupName="GroupFilter" Click="OnGroupByChanged" />
                <RadioButton x:Name="rdoWanted" Content="Wanted" GroupName="GroupFilter" Click="OnGroupByChanged" />
            </StackPanel>
        </GroupBox>
        <DataGrid x:Name="dgMovies" DockPanel.Dock="Top" Margin="5" MaxHeight="500" AutoGenerateColumns="False" HorizontalAlignment="Center" VerticalAlignment="Top" SelectionMode="Single" SelectionUnit="FullRow" CanUserAddRows="False" RowHeaderWidth="0"
                  SelectionChanged="dgMovies_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Disabled" DataContext="{Binding RelativeSource={RelativeSource Self}}" DataGridCell.GotFocus="dgMovies_GotFocus">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Title" Width="*" Binding="{Binding Path=Name, Mode=OneWay}" />
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <DockPanel LastChildFill="False" Background="#FF354B6C">
                                            <RadioButton x:Name="tbExpand" DockPanel.Dock="Top" Click="OnExpandClick">
                                                <DockPanel>
                                                    <Path x:Name="path" Fill="White" Data="M0,6L12,6 6,0z" />
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount, StringFormat={}{0} }" Margin="5, 0, 0, 0" />
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=Name, Converter={StaticResource MovieGroupHeaderConverter}}" Margin="5, 0, 0, 0" />
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount, Converter={StaticResource MovieGroupHeaderPluralConverter}}" />
                                                </DockPanel>
                                            </RadioButton>
                                            <DockPanel x:Name="dpItemPresenter" DockPanel.Dock="Top" LastChildFill="True" Visibility="{Binding IsChecked, ElementName=tbExpand, Converter={StaticResource BooleanTrueToVisibilityConverter}}">
                                                <ItemsPresenter DockPanel.Dock="Top" />
                                            </DockPanel>
                                        </DockPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <DockPanel LastChildFill="False">
                        <Border DockPanel.Dock="Left" BorderBrush="Black" BorderThickness="1" Margin="5" VerticalAlignment="Top" Visibility="{Binding Path=PosterPath, Converter={StaticResource NullToVisibilityConverter}}">
                            <Image Height="200" Source="{Binding PosterPath}" />
                        </Border>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="False" Margin="0">
                            <TextBlock DockPanel.Dock="Left" Foreground="White" Text="{Binding Title, Mode=OneWay}" FontWeight="Bold" />
                            <TextBlock DockPanel.Dock="Left" Foreground="White" Margin="5, 0" Text="{Binding ReleaseDate, StringFormat={}({0:yyyy}), ConverterCulture=en-GB}" />
                            <TextBlock DockPanel.Dock="Left" Foreground="White" Margin="5, 0" Text="{Binding Budget, StringFormat={}{0:C0}}" />
                            <TextBlock DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="White" Text="{Binding Path=Genres, Converter={StaticResource GenreListToStringConverter}}" />
                        </DockPanel>
                        <Rectangle DockPanel.Dock="Top" Height="2" HorizontalAlignment="Stretch" Fill="Black" />
                        <DockPanel DockPanel.Dock="Top" LastChildFill="False" Margin="0">
                            <TextBlock DockPanel.Dock="Left" Foreground="White" Text="Overview" FontWeight="Bold" />
                            <CheckBox DockPanel.Dock="Left" Margin="5, 0" Content="Is Adult" IsEnabled="False" IsChecked="{Binding IsAdult, Mode=OneWay}" />
                            <TextBlock DockPanel.Dock="Right" Margin="5, 0" Foreground="White" Text="{Binding Format.Name, Mode=OneWay}" />
                        </DockPanel>
                        <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Left" Visibility="{Binding Homepage, Converter={StaticResource NullToVisibilityConverter}}">
                            <Hyperlink NavigateUri="{Binding Homepage}" RequestNavigate="Hyperlink_RequestNavigate">
                                Homepage
                            </Hyperlink>
                        </TextBlock>
                        <DockPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" LastChildFill="True" Margin="5">
                            <DockPanel DockPanel.Dock="Right" HorizontalAlignment="Right" LastChildFill="False" Margin="5">
                                <RadioButton x:Name="rdoIsCheckedOut" DockPanel.Dock="Top" Margin="8" HorizontalAlignment="Left" Click="rdoIsCheckedOut_Click"
                                         Content="{Binding Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsCheckedOutToTextConverter}}"
                                         Background="{Binding Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsCheckedOutToBackgroundColorConverter}}"
                                         IsChecked="{Binding Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Converter={StaticResource CheckOutEnabledConverter}}" />
                                <!--<CheckBox x:Name="cboIsOwned" DockPanel.Dock="Top" Content="Is Owned" Margin="8, 0" HorizontalAlignment="Left" Checked="cboIsOwned_Checked" Unchecked="cboIsOwned_Unchecked"
                                      IsChecked="{Binding IsOwned, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Converter={StaticResource CheckOutEnabledConverter}}">
                                    <ToggleButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ToggleButton.RenderTransform>
                                </CheckBox>
                                <CheckBox x:Name="cboIsWanted" DockPanel.Dock="Top" Content="Is Wanted" Margin="8, 0" HorizontalAlignment="Left" Checked="cboIsWanted_Checked" Unchecked="cboIsWanted_Unchecked"
                                      IsChecked="{Binding IsWanted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Converter={StaticResource CheckOutEnabledConverter}}">
                                    <ToggleButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ToggleButton.RenderTransform>
                                </CheckBox>-->
                                <ToggleButton DockPanel.Dock="Top" Margin="8" Content="{Binding Converter={StaticResource IsWantedOwnedTextConverter}}" Background="{Binding Converter={StaticResource IsWantedOwnedBackgroumdConnverter}}"
                                              Command="local:SearchMovies.OwnedWantedClick">
                                    <ToggleButton.CommandBindings>
                                        <CommandBinding Command="local:SearchMovies.OwnedWantedClick" CanExecute="CanOwnedWantedClick" Executed="OwnedWantedClickExecuted" />
                                    </ToggleButton.CommandBindings>
                                    <ToggleButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </DockPanel>
                            <DataGrid DockPanel.Dock="Right" AlternatingRowBackground="#FF5A7BAD" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" HorizontalAlignment="Left" Margin="5" MaxHeight="125" RowBackground="#FF354B6C"
                                      RowHeaderWidth="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single" SelectionUnit="FullRow" VerticalAlignment="Top" ItemsSource="{Binding Path=CheckOutHistories}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Customer Name" Width="*" IsReadOnly="True" Binding="{Binding Path=Customer.FullName}" />
                                    <DataGridTextColumn Header="Check Out Date" IsReadOnly="True" Binding="{Binding Path=CheckOutDate, Converter={StaticResource DateTimeToDateAndTimeOrNullConverter}}" />
                                    <DataGridTextColumn Header="Check In Date" IsReadOnly="True" Binding="{Binding Path=CheckInDate, Converter={StaticResource DateTimeToDateAndTimeOrNullConverter}}" />
                                </DataGrid.Columns>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}">
                                        <Setter Property="Background" Value="{x:Null}" />
                                        <Setter Property="BorderBrush" Value="{x:Null}" />
                                        <Setter Property="Foreground" Value="White" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="{x:Null}" />
                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Style>
                                    <Style TargetType="{x:Type DataGrid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Style>
                            </DataGrid>
                        </DockPanel>
                        <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Foreground="White" Text="{Binding Overview}" />
                    </DockPanel>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Foreground" Value="White" />
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnSelectRowDetails"/>
                    <Style.Triggers>
                        <Trigger Property="AlternationIndex" Value="0">
                            <Setter Property="Background" Value="{Binding Converter={StaticResource IsCheckedOutToRowColorConverter}}" />
                        </Trigger>
                        <Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{Binding Converter={StaticResource IsCheckedOutToAlternateRowColorConverter}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </DockPanel>
</UserControl>