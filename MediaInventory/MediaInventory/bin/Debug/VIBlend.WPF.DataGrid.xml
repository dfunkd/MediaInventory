<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VIBlend.WPF.DataGrid</name>
    </assembly>
    <members>
        <member name="T:VIBlend.WPF.Controls.IExportWriter">
            <summary>
            Data export provider for GridView interface definition
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.IExportWriter.CreateFile(System.String)">
            <summary>
            Creates and opens an output file for writing
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.IExportWriter.CloseFile">
            <summary>
            Closes the output file
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.IExportWriter.BeginRow">
            <summary>
            Starts a grid row
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.IExportWriter.EndRow">
            <summary>
            Ends a grid row
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.IExportWriter.AddColumn(System.String)">
            <summary>
            Adds a column
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.IExportWriter.AddColumn(System.Object)">
            <summary>
            Adds a column
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.GridExport">
            <summary>
            Represents a Data Export provider for VIBlend GridView
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridExport.ExportToCSV(VIBlend.WPF.Controls.DataGrid,System.String)">
            <summary>
            Exports the content of the data grid into a CSV file
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridExport.ExportToHTML(VIBlend.WPF.Controls.DataGrid,System.String)">
            <summary>
            Exports the content of the data grid into a HTML file
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridExport.ExportToExcelXML(VIBlend.WPF.Controls.DataGrid,System.String)">
            <summary>
            Exports the content of the data grid into a Microsoft Excel compatible XML file
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridExport.ExportToXML(VIBlend.WPF.Controls.DataGrid,System.String)">
            <summary>
            Exports the content of the data grid into a XML file
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridExport.Export(VIBlend.WPF.Controls.DataGrid,System.String,VIBlend.WPF.Controls.IExportWriter)">
            <summary>
            Exports the content of the data grid using a custom export provider
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellEventArgs">
            <summary>
            Represents a grid cell event argument.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellEventArgs.#ctor(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Constructor
            </summary>
            <param name="cell">GridCell associated with the event</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellEventArgs.Cell">
            <summary>
            GridCell associated with the event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellDataExportEventArgs.#ctor(VIBlend.WPF.Controls.GridCell,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.CellDataExportEventArgs"/> class.
            </summary>
            <param name="cell">The cell.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellDataExportEventArgs.FormatProvider">
            <summary>
            Gets or sets the format provider.
            </summary>
            <value>The format provider.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellDataExportEventArgs.FormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellsArea">
            <summary>
            Represents the data grid's cell area
            </summary>
            <summary>
            Represents the data grid's cell area
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.BeginSelectionUpdate">
            <summary>
            Begins selection update. Marks all selected cells for unselection.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.EndSelectionUpdate">
            <summary>
            Ends selection update. Removes all cells which are marked as unselected.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.ClearSelection">
            <summary>
            Clears the grid cells selection.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SelectCell(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Selects a specific grid cell.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SelectCell(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Selects a specific grid cell.
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.UnSelectCell(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Removes the selection for a specific grid cell
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.UnSelectCell(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Removes the selection for a specific grid cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.InternalUnSelectCell(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.IsCellSelected(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Determines whether a grid cell is selected
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <returns>The method returns true when the cell is selected.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.#ctor(VIBlend.WPF.Controls.DataGrid)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.Clear">
            <summary>
            Clears all stored cell values and settings.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellValue(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Object)">
            <summary>
            Sets the Value of a cell
            </summary>
            <remarks>
            The Value of a grid cell can be of any type. The default bahavior of the grid is to format and display the object as a String.
            If you want to override this behaviour, you need to specify a formatter for the cell or its corresponding row, or column.
            </remarks>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellValue(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the Value of a grid cell
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellSpan(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Int32,System.Int32)">
            <summary>
            Sets the span of a data grid cell
            </summary>
            <param name="rowItem">The row of the grid cell</param>
            <param name="columnItem">The column of the grid cell</param>
            <param name="rowsCount">Number of rows to merge/span</param>
            <param name="columnsCount">Number of columns to merge/span</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.IsCellMerged(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Checks if a cell is merged.
            </summary>
            <param name="rowItem">Cell's row.</param>
            <param name="columnItem">Cell's column.</param>
            <returns>True if the cell is merged. Otherwise false.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellSpan(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Returns the cell span properties of a grid cell.
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellSpansList">
            <summary>
            Gets the List of cell span groups.
            </summary>
            <remarks>
            Use this method to retrieve information about the cell merges in the data grid
            </remarks>
            <returns>List of CellSpan objects containing information about cell merges</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellDataSource(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.GridCellDataSource)">
            <summary>
            Sets the data source property of a grid cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <param name="cellDataSource">Cell's data source type</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellDataSource(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the data source type of a grid cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <returns>The data source type of the grid cell. The default value is NotSet which means that the cell is unbound</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellEditorActivationFlags(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.EditorActivationFlags)">
            <summary>
            Sets the editor activation flags for a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <param name="flags">A bitmask that represents the cell editor activation flags.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellEditorActivationFlags(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the editor activation flags for a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <returns>A bitmask that represents the editor activation flags for the grid cell.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellEditorDeActivationFlags(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.EditorActivationFlags)">
            <summary>
            Sets the editor deactivation flags for a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <param name="flags">A bitmask that represents the cell editor deactivation flags.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellEditorDeActivationFlags(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the editor deactivation flags for a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <returns>A bitmask that represents the editor deactivation flags for the grid cell.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellStyle(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Windows.Style)">
            <summary>
            Sets the GridCellElement style for a specific cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <param name="style">Cell's element style</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellStyle(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the GridCellElement style of a specific cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <returns>The GridCellElement Style of the cell or null.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellHorizontalContentAlignment(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the cell horizontal content alignment.
            </summary>
            <param name="rowItem">The row item.</param>
            <param name="columnItem">The column item.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellHorizontalContentAlignment(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Nullable{System.Windows.HorizontalAlignment})">
            <summary>
            Sets the cell horizontal content alignment.
            </summary>
            <param name="rowItem">The row item.</param>
            <param name="columnItem">The column item.</param>
            <param name="horizontalContentAlignment">The horizontal content alignment.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellVerticalContentAlignment(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the cell vertical content alignment.
            </summary>
            <param name="rowItem">The row item.</param>
            <param name="columnItem">The column item.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellVerticalContentAlignment(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Nullable{System.Windows.VerticalAlignment})">
            <summary>
            Sets the cell vertical content alignment.
            </summary>
            <param name="rowItem">The row item.</param>
            <param name="columnItem">The column item.</param>
            <param name="VerticalContentAlignment">The vertical content alignment.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellTextBlockStyle(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the GridCellElement TextBlock Style of a specific cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <returns>The GridCellElement TextBlockStyle of the cell or null.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellTextBlockStyle(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Windows.Style)">
            <summary>
            Sets the GridCellElement TextBlock Style for a specific cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <param name="style">Cell's TextBlock style</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellDataContext(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Object)">
            <summary>
            Sets the DataContext of grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <param name="dataContext">The DataContext for the grid cell.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellDataContext(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the DataContext of a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <returns>The DataContext for the grid cell.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellDataTemplate(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Windows.DataTemplate)">
            <summary>
            Sets the DataTemplate of a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <param name="dataTemplate">The DataTemplate for the grid cell.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellDataTemplate(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the DataTemplate of a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <returns>The DataTemplate of the grid cell. If the grid cell was not assigned a DataTemplate, the method return a reference to the DefaultCellDataTemplate.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellEditTemplate(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Windows.DataTemplate)">
            <summary>
            Sets the Edit mode DataTemplate of a grid cell.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <param name="editTemplate">The Edit DataTemplate for the grid cell.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellEditTemplate(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the Edit mode DataTemplate of a grid cell. 
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <returns>The Edit mode DataTemplate of the grid cell. If the grid cell was not assigned an Edit DataTemplate, the method return a reference to the DefaultCellEditTemplate.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.SetCellTextFormatString(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.String)">
            <summary>
            Sets the cell text format string.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <param name="formatString">The cell test format string.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellTextFormatString(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Sets the cell text format string.
            </summary>
            <param name="rowItem">The row item where the cell is located.</param>
            <param name="columnItem">The column item where the cell is located.</param>
            <returns>The text format string of the grid cell. If the grid cell was not assigned a format string, the method returns an empty string.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.HitTest(System.Windows.Point)">
            <summary>
            Returns the grid cell at a specific position
            </summary>
            <param name="point"></param>
            <returns>A reference to a grid cell or null if the position is outside of the cells area</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.UnlockAllCells">
            <summary>
            Clears the lock on all grid cells.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.LockCell(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Locks a specific grid cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.UnlockCell(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Unlocks a specific grid cell
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.IsLockedCell(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Determines if a grid cell is locked or not
            </summary>
            <param name="rowItem">Cell's row</param>
            <param name="columnItem">Cell's column</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.OnPropertyChanged(System.String)">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellAbove(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Returns the cell displayed above a specific cell
            </summary>
            <param name="cell">The grid cell used as a starting point.</param>
            <returns>The grid cell that appears above the specified cell. If such cell does not exist the method return null.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellBelow(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Returns the cell displayed below a specific cell
            </summary>
            <param name="cell">The grid cell used as a starting point.</param>
            <returns>The grid cell that appears below the specified cell. If such cell does not exist the method return null.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellLeft(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Returns the cell displayed on the left of a specific cell
            </summary>
            <param name="cell">The grid cell used as a starting point.</param>
            <returns>The grid cell that appears on the left side of the specified cell. If such cell does not exist the method return null.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellsArea.GetCellRight(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Returns the cell displayed on the right of a specific cell
            </summary>
            <param name="cell">The grid cell used as a starting point.</param>
            <returns>The grid cell that appears on the right side of the specified cell. If such cell does not exist the method return null.</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.SelectedCellsCount">
            <summary>
            Returns the number of selected cells
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.SelectedCells">
            <summary>
            Returns a list of all selected cells
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.GridControl">
            <summary>
            Returns a reference to the Grid control hosting the CellsArea.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.IsDataBoundPivotCellsEditable">
            <summary>
            Gets or sets whether the data bound pivot cells are editable.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.CellSpanGroupsCount">
            <summary>
            Returns the number of cell span groups
            <remarks>
            Use this property to determine the number of cell merges in the data grid
            </remarks>
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.DefaultCellStyle">
            <summary>
            Gets or sets the default grid cells Style
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.DefaultCellDataTemplate">
            <summary>
            Gets or sets the default DataTemplate for the grid cells.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.DefaultCellEditTemplate">
            <summary>
            Gets or sets the default DataTemplate for editing grid cells
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.AllowCellMerge">
            <summary>
            Specifies whether cell merge operations are allowed or not
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.EditCell">
            <summary>
            Gets a reference to the grid cell that is currently being edited
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.NonEmptyCells">
            <summary>
            Retrieves all non-empty grid cells
            </summary>
            <returns></returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.Cells">
            <summary>
            Retrieves all non-empty grid cells
            </summary>
            <returns></returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellsArea.ViewPort">
            <summary>
            Gets the currently visible bounds of the CellsArea.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.CellsArea.PropertyChanged">
            <summary>
            Occurs when a Cell property has changed.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellValueNeededEventArgs">
            <summary>
            Represents a data grid value need event arguments
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellValueNeededEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.CellValueNeededEventArgs.RowItem">
            <summary>
            Cell's Row
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.CellValueNeededEventArgs.ColumnItem">
            <summary>
            Cell's Column 
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.CellValueNeededEventArgs.CellValue">
            <summary>
            The value of the cell
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.GridLinesDisplayMode">
            <summary>
            Enumeration of the grid lines display modes
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridLinesDisplayMode.DISPLAY_ALL">
            <summary>
            Display grid lines which separate the columns and the rows
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridLinesDisplayMode.DISPLAY_ROW_LINES">
            <summary>
            Display grid lines which separate the rows only
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridLinesDisplayMode.DISPLAY_COLUMN_LINES">
            <summary>
            Display grid lines which separate the columns only
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridLinesDisplayMode.DISPLAY_NONE">
            <summary>
            Do not display grid lines
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.PropertyBag`1.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="E:VIBlend.WPF.Controls.PropertyBag`1.PropertyChanged">
            <summary>
            Occurs when a property is changed.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemDragEventArgs">
            <summary>
            Represents a grid HierarchyItem drag event argument
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemDragEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Constructor
            </summary>
            <param name="sourceItem">Drag source HierarchyItem.</param>
            <param name="targetItem">Drop target HierarchyItem.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemDragEventArgs.DragSourceHierarchyItem">
            <summary>
            Gets the DragSource HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemDragEventArgs.DropTargetHierarchyItem">
            <summary>
            Gets the DropTarget HierarchyItem
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.PivotDesignPanelContextMenuOpeningEventArgs">
            <summary>
            Represents a class containing PivotDesignPanel ContextMenu event data.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.PivotDesignPanelContextMenuOpeningEventArgs.#ctor(System.Windows.Controls.ContextMenu)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.PivotDesignPanelContextMenuOpeningEventArgs"/> class.
            </summary>
            <param name="menu">The menu.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.PivotDesignPanelContextMenuOpeningEventArgs.ContextMenu">
            <summary>
            Gets or sets the context menu.
            </summary>
            <value>
            The context menu.
            </value>
        </member>
        <member name="T:VIBlend.WPF.Controls.RowGroupHeaderElement">
            <summary>
            Represents a Row group header element control.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowGroupHeaderElement.#ctor">
            <summary>
            RowGroupHeaderElement constructor.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowGroupHeaderElement.OnApplyTemplate">
            <summary>
            Overridden implementation of OnApplyTemplate.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowGroupHeaderElement.IsExpandedProperty">
            <summary>
            DependencyProperty that represents whether the Header is in Expanded state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowGroupHeaderElement.IsHoverProperty">
            <summary>
            DependencyProperty that represents whether the Header is in Hover state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowGroupHeaderElement.IsSelectedProperty">
            <summary>
            DependencyProperty that represents whether the Header is in Selected state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowGroupHeaderElement.ToggleButtonVisibilityProperty">
            <summary>
            DependencyProperty that represents whether the Header is in Expand/Collapse button is visible.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowGroupHeaderElement.ExpandButtonHorizontalAlignmentProperty">
            <summary>
            DependencyProperty that represents the Horizontal Alignment of the Expand button.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowGroupHeaderElement.ExpandButtonVerticalAlignmentProperty">
            <summary>
            DependencyProperty that represents the Vertical Alignment of the Expand button.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowGroupHeaderElement.ContentPaddingProperty">
            <summary>
            DependencyProperty that represents the Content padding of the control.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowGroupHeaderElement.OnExpanding(System.EventArgs)">
            <summary>
            Raises the Expanding event.
            </summary>
            <param name="args">EventArgs that represents the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowGroupHeaderElement.OnCollapsing(System.EventArgs)">
            <summary>
            Raises the Collapsing event.
            </summary>
            <param name="args">EventArgs that represents the event arguments.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.ExpandButtonHorizontalAlignment">
            <summary>
            Gets or sets the Horizontal alignment of the ExpandButton.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.ExpandButtonVerticalAlignment">
            <summary>
            Gets or sets the Vertical alignment of the ExpandButton.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.ContentPadding">
            <summary>
            Gets or sets the control's Content padding.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.IsHover">
            <summary>
            Gets or sets the control's Hover state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.IsSelected">
            <summary>
            Gets or sets the control's Selected state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.IsExpanded">
            <summary>
            Gets or sets the control's Expanded state.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.RowGroupHeaderElement.Expanding">
            <summary>
            Occurs befor the RowGroupHeaderElement transitions into an expanded state
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.RowGroupHeaderElement.Collapsing">
            <summary>
            Occurs befor the RowGroupHeaderElement transitions into a collapsed state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.ToggleButtonVisibility">
            <summary>
            Gets or sets the toggle button visibility.
            </summary>
            <value>
            The toggle button visibility.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupHeaderElement.OwnerRow">
            <summary>
            Gets or sets the row HierarchyItem that hosts the control.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemMouseEventArgs">
            <summary>
            Represents a HierarchyItem mouse event argument.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemMouseEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,System.Windows.Input.MouseEventArgs)">
            <summary>
            Constructor
            </summary>
            <param name="hierarchyItem">HierarchyItem associated with the event.</param>
            <param name="MouseEventArgs">MouseEventArgs that contains data associated with the event.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemMouseEventArgs.HierarchyItem">
            <summary>
            The HierarchyItem associated with the event.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemMouseEventArgs.MouseEventArgs">
            <summary>
            Returns the MouseEventArgs.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemMouseButtonEventArgs">
            <summary>
            Represents a HierarchyItem mouse button event argument.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemMouseButtonEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,System.Windows.Input.MouseButtonEventArgs,System.Windows.Input.MouseButton)">
            <summary>
            Constructor
            </summary>
            <param name="hierarchyItem">HierarchyItem associated with the event.</param>
            <param name="MouseButtonEventArgs">MouseButtonEventArgs that contains data associated with the event.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemMouseButtonEventArgs.HierarchyItem">
            <summary>
            The HierarchyItem associated with the event.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemMouseButtonEventArgs.MouseButtonEventArgs">
            <summary>
            Returns the MouseButtonEventArgs.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemMouseButtonEventArgs.ChangedButton">
            <summary>
            Gets the mouse button assoicated with the event.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid">
            <summary>
            Represents a DataGrid control that provides tabular data visualization, hierarchical data rendering, grouping, pivoting and OLAP analysis.
            </summary>
            <summary>
            Represents a DataGrid control that provides tabular data visualization, hierarchical data rendering, grouping, pivoting and OLAP analysis.
            </summary>
            <summary>
            Represents a DataGrid control that provides tabular data visualization, hierarchical data rendering, grouping, pivoting and OLAP analysis.
            </summary>
            <summary>
            DataGrid
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnScrollPositionChanged(System.EventArgs)">
            <summary>
            Raises the ScrollPositionChanged event.
            </summary>
            <param name="args">EventArgs that holds the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnContextMenuShowing(VIBlend.WPF.Controls.ContextMenuShowingEventArgs)">
            <summary>
            Raises the ContextMenuShowing event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.ItemsSourceProperty">
            <summary> 
            Identifies the ItemsSource dependency property. 
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.DataBind">
            <summary>
            Binds data from the data source to the control.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.DrillThroughPivotCell(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Gets the indexes of the rows set that is used to calculate the value of the grid cell in the pivot table view.
            </summary>
            <param name="rowItem">Row Hierarchy Item of the grid cell.</param>
            <param name="columnItem">Column Hierarchy Item of the grid cell.</param>
            <returns>Array of row indexes representing the rows set used to calculate the value of the pivot table cell.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.#ctor">
            <summary>
            DataGrid constructor.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.GetScrollbars(System.Windows.Controls.Primitives.ScrollBar@,System.Windows.Controls.Primitives.ScrollBar@)">
            <summary>
            Gets the scrollbars.
            </summary>
            <param name="hScrollBar">The Horizontal scroll bar.</param>
            <param name="vScrollBar">The Vertical scroll bar.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.VerticalGridlinesBrushProperty">
            <summary>
            DependencyProperty that specifies the Vertical grid lines Brush.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.HorizontalGridlinesBrushProperty">
            <summary>
            DependencyProperty that specifies the Horizontal grid lines Brush.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.SelectionBorderBrushProperty">
            <summary>
            DependencyProperty that specifies the Selection border Brush.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.DisabledBackgroundBrushProperty">
            <summary>
            DependencyProperty that specifies the Disabled background brush
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.CellsAreaBackgroundProperty">
            <summary>
            DependencyProperty that specifies the CellsArea background Brush.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.AutoGenerateColumnsProperty">
            <summary>
            DependencyProperty that represents whether the DataGrid will automatically bind to all columns available in the data source.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.BeginUpdate">
            <summary>
            Prepares the grid for data update operations.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.EndUpdate">
            <summary>
            Takes the data grid out of update mode.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.Refresh">
            <summary>
            Causes the DataGrid to refresh its entire content.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnFilterValuesLoaded(VIBlend.WPF.Controls.FilterValuesLoadedEventArgs)">
            <summary>
            Raises the <see cref="E:FilterValuesLoaded"/> event.
            </summary>
            <param name="args">The <see cref="!:VIBlend.Silverlight.Controls.FilterValuesLoadedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnLoadRowDetails(VIBlend.WPF.Controls.RowDetailsEventArgs)">
            <summary>
            Raises the LoadRowDetails event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnToolTipShown(System.Object,VIBlend.WPF.Controls.ToolTipEventArgs)">
            <summary>
            Raises the <see cref="E:ToolTipShown"/> event.
            </summary>
            <param name="args">The <see cref="!:VIBlend.Silverlight.Controls.ToolTipEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnToolTipShow(VIBlend.WPF.Controls.ToolTipEventArgs)">
            <summary>
            Raises the TooltipShow event.
            </summary>
            <param name="args">ToolTipEventArgs that holds the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called before the MouseWheel event occurs.
            </summary>
            <param name="e">A MouseWheelEventArgs that holds the mouse wheel event arguments data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the KeyDown event occurs.
            </summary>
            <param name="e">A KeyEventArgs that holds the key event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the KeyUp event occurs.
            </summary>
            <param name="e">A KeyEventArgs that holds the key event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.Clear">
            <summary>
            Clears the DataGrid data.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.EnsureVisible(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Ensures that the specified item is visible within the control, scrolling the contents of the control if necessary.
            </summary>
            <param name="item">The HierarchyItem to scroll into view.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.EnsureVisible(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Ensures that the specified grid cell is visible within the control, scrolling the contents of the control if necessary.
            </summary>
            <param name="cell">The GridCell to scroll into view.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.ShowEditor(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Submits an activation request to a grid cell's editor
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.ShowEditor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Submits an activation request to a grid cell's editor
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.CloseEditor(System.Boolean)">
            <summary>
            Submits a deactivation request to the currently opened editor
            </summary>
            <param name="CancelChanges">A Flag indicating whether the new value should be canceled or commited</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.SortBy(VIBlend.WPF.Controls.HierarchyItem,System.Boolean)">
            <summary>
            Sorts the grid data on a specific item
            </summary>
            <param name="item">Item to sort on</param>
            <param name="isDESCSort">Dermines whether to use Ascending or Descending sort</param>
            <remarks>
            This method can be used only if the data grid is bound to a data source which supports sorting.
            For example, DataTables support sorting while generic lists do not.
            </remarks>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.GridCellSortComparer">
            <summary>
            Represents a custom grid cell comparer
            <remarks>
            Use this property to override the default sorting behaviour of the grid
            </remarks>
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.RemoveSort(VIBlend.WPF.Controls.Hierarchy)">
            <summary>
            Clears the sorting for a specific hierarchy.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.RemoveSort">
            <summary>
            Clears the sorting.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.CellsHighlightBrushProperty">
            <summary>
            DependencyProperty that specifies the Selection border Brush.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemMouseMove(VIBlend.WPF.Controls.HierarchyItemEventArgs)">
            <summary>
            Raises the <see cref="E:HierarchyItemMouseEnter"/> event.
            </summary>
            <param name="args">The <see cref="!:VIBlend.Silverlight.Controls.HierarchyItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemDragEnded(VIBlend.WPF.Controls.HierarchyItemDragEventArgs)">
            <summary>
            Raises the HierarchyItemDragEnded event.
            </summary>
            <param name="args">HierarchyItemDragEventArgs the holds the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemDragStarted(VIBlend.WPF.Controls.HierarchyItemDragEventArgs)">
            <summary>
            Raises the HierarchyItemDragStarted event.
            </summary>
            <param name="args">HierarchyItemDragEventArgs the holds the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemDragStarting(VIBlend.WPF.Controls.HierarchyItemDragCancelEventArgs)">
            <summary>
            Raises the OnHierarchyItemDragStarting event.
            </summary>
            <param name="args">HierarchyItemDragCancelEventArgs the holds the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemDragEnding(VIBlend.WPF.Controls.HierarchyItemDragCancelEventArgs)">
            <summary>
            Raises the HierarchyItemDragEnding event.
            </summary>
            <param name="args">HierarchyItemDragCancelEventArgs the holds the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemExpanding(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Raises the HierarchyItemExpanding event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemCollapsing(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Raises the HierarchyItemCollapsing event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemExpanded(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Raises the HierarchyItemExpanded event.
            </summary>
            <param name="item">The HierarchyItem which was expanded.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemCollapsed(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Raises the HierarchyItemCollapsed event.
            </summary>
            <param name="item">The HierarchyItem which was collapsed.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemSelectionChanged(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Raises the HierarchyItemSelectionChanged event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemMouseDown(VIBlend.WPF.Controls.HierarchyItem,System.Windows.Input.MouseButtonEventArgs,System.Windows.Input.MouseButton)">
            <summary>
            Raises the HierarchyItemMouseDown event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemMouseUp(VIBlend.WPF.Controls.HierarchyItem,System.Windows.Input.MouseButtonEventArgs,System.Windows.Input.MouseButton)">
            <summary>
            Raises the HierarchyItemMouseUp event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemMouseClick(VIBlend.WPF.Controls.HierarchyItem,System.Windows.Input.MouseButtonEventArgs,System.Windows.Input.MouseButton)">
            <summary>
            Raises the HierarchyItemMouseClick event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemMouseDoubleClick(VIBlend.WPF.Controls.HierarchyItem,System.Windows.Input.MouseButtonEventArgs,System.Windows.Input.MouseButton)">
            <summary>
            Raises the HierarchyItemMouseDoubleClick event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnHierarchyItemPropertyChanged(VIBlend.WPF.Controls.HierarchyItem,System.String)">
            <summary>
            Raises the HierarchyItemPropertyChanged event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellValueNeeded(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Object@)">
            <summary>
            Raises the CellValueNeeded event.
            </summary>
            <param name="rowItem">Row item of the grid cell.</param>
            <param name="colItem">Row item of the grid cell.</param>
            <param name="CellValue">The object that will hold the value of the grid cell.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellValueChanging(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Object)">
            <summary>
            Raises the CellValueChanging event.
            </summary>
            <param name="rowItem">The row of the grid cell.</param>
            <param name="columnItem">The column of the grid cell.</param>
            <param name="newValue">The new value of the grid cell.</param>
            <returns>Returns True if the event was canceled by the user.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellValueChanged(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Raises the CellValueChanged event.
            </summary>
            <param name="rowItem">The row of the grid cell.</param>
            <param name="columnItem">The column of the grid cell.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellSelectionChanged(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Raises the CellSelectionChanged event.
            </summary>
            <param name="rowItem">The row of the grid cell.</param>
            <param name="columnItem">The column of the grid cell.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellKeyDown(VIBlend.WPF.Controls.CellKeyEventArgs)">
            <summary>
            Raises the <see cref="E:CellKeyDown"/> event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellKeyUp(VIBlend.WPF.Controls.CellKeyEventArgs)">
            <summary>
            Raises the <see cref="E:CellKeyUp"/> event.
            </summary>
            <param name="args">The CellKeyEventArgs instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellMouseClick(VIBlend.WPF.Controls.CellMouseButtonEventArgs)">
            <summary>
            Raises the CellMouseClick event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellMouseDoubleClick(VIBlend.WPF.Controls.CellMouseButtonEventArgs)">
            <summary>
            Raises the OnCellMouseDoubleClick event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellValidating(VIBlend.WPF.Controls.CellCancelEventArgs)">
            <summary>
            Raises the CellValidating event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellValidated(VIBlend.WPF.Controls.CellEventArgs)">
            <summary>
            Raises the CellValidated event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellDataAggregation(VIBlend.WPF.Controls.CellDataAggregationEventArgs)">
            <summary>
            Raises the <see cref="E:CellDataAggregation"/> event.
            </summary>
            <param name="args">The <see cref="T:VIBlend.WPF.Controls.CellDataAggregationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellBeginEdit(VIBlend.WPF.Controls.CellCancelEventArgs)">
            <summary>
            Raises the CellBedingEdit event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellEndEdit(VIBlend.WPF.Controls.CellCancelEventArgs)">
            <summary>
            Raises the CellEndEdit event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellMouseEnter(VIBlend.WPF.Controls.CellEventArgs)">
            <summary>
            Raises the CellMouseEnter event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellMouseLeave(VIBlend.WPF.Controls.CellEventArgs)">
            <summary>
            Raises the CellMouseLeave event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellMouseDown(VIBlend.WPF.Controls.CellMouseButtonEventArgs)">
            <summary>
            Raises the CellMouseDown event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellMouseUp(VIBlend.WPF.Controls.CellMouseButtonEventArgs)">
            <summary>
            Raises the CellMouseUp event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.OnCellMouseMove(VIBlend.WPF.Controls.CellMouseEventArgs)">
            <summary>
            Raises the CellMouseMove event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGrid.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.HorizontalScroll">
            <summary>
            Gets or sets the horizontal scroll position
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.VerticalScroll">
            <summary>
            Gets or sets the vertical scroll position
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ScrollBarsEnabled">
            <summary>
            Determines whether the Horizontal and Vertical ScrollBars will be displayed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.VerticalScrollBarStyle">
            <summary>
            Gets or sets the Style of the Vertical ScrollBar control
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.HorizontalScrollBarStyle">
            <summary>
            Gets or sets the Style of the Horizontal ScrollBar control
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.VerticalScrollBarLargeChange">
            <summary>
            Gets or sets the LargeChange of the Vertical ScrollBar.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.VerticalScrollBarSmallChange">
            <summary>
            Gets or sets the SmallChange of the Vertical ScrollBar.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.HorizontalScrollBarLargeChange">
            <summary>
            Gets or sets the LargeChange of the Horizontal ScrollBar.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.HorizontalScrollBarSmallChange">
            <summary>
            Gets or sets the SmallChange of the Horizontal ScrollBar.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.DeferredScrollingEnabled">
            <summary>
            Gets or sets if Deferred Scrolling mode is enabled.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ScrollOpacityAnimationEnabled">
            <summary>
            Gets or sets whether the cells opacity is animated during scrolling.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ScrollAnimationTime">
            <summary>
            Gets or sets the duration of the scroll animation.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ScrollAnimationMode">
            <summary>
            Gets or sets the scroll animation mode.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.ScrollPositionChanged">
            <summary>
            Occurs when the scroll position has changed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AllowContextMenuSorting">
            <summary>
            Determines whether to display the sorting options in the grid's context menu
            </summary>
            <remarks>
            When the user clicks the right mouse button on a HierarchyItem, the grid will display a context menu with multiple actions.
            The actions may include filtering, sorting, expand/collapse state, and others. The list may vary depending on the flags 
            set at HierarchyItem level itself, and the context menu flags for each action type.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AllowContextMenuFiltering">
            <summary>
            Determines whether to display the sorting options in the grid's context menu
            </summary>
            <remarks>
            When the user clicks the right mouse button on a HierarchyItem, the grid will display a context menu with multiple actions.
            The actions may include filtering, sorting, expand/collapse state, and others. The list may vary depending on the flags 
            set at HierarchyItem level itself, and the context menu flags for each action type.
            </remarks>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.ContextMenuShowing">
            <summary>
            Occurs when the context menu is showing.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.NavigationKeyDown">
            <summary>
            Occurs when a navigation key such as Left Arrow, Right Arrow, Up Arrow, Down Arrow, Ctrl or Shift is pressed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.CloseWithoutSaveEditorKey">
            <summary>
            Gets or sets the close without save editor key.
            </summary>
            <value>The close without save editor key.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.BindingState">
            <summary>
            Gets the current data binding state of the grid control
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ItemsSource">
            <summary> 
            Gets or sets a collection used to generate the content of the DataGrid. 
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.BoundFields">
            <summary>
            Collection of Bound fields representing data binding relationships between data columns from the data source, and grid columns or rows
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.BoundFieldsFilters">
            <summary>
            Collection of filters applied during the data binding process
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.BoundPivotRows">
            <summary>
            Collection of Bound fields for which the grid data will be displayed on rows in a pivot table scenario
            </summary>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotColumns"/>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotValues"/>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.BoundPivotColumns">
            <summary>
            Collection of Bound fields for which the grid data will be displayed on columns in a pivot table scenario
            </summary>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotRows"/>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotValues"/>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.BoundPivotValues">
            <summary>
            Collection of BoundValue fields which will form the Pivot table values. In a pivot table the values can be attached either next
            to the rows or to the columns.
            </summary>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.PivotValuesOnRows"/>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotRows"/>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotColumns"/>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.PivotRowsTotalsEnabled">
            <summary>
            Gets or sets if the Pivot Table Rows Totals are enabled.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.PivotRowsTotalsMode">
            <summary>
            Gets or sets the Pivot Table Rows totals display mode.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.PivotColumnsTotalsEnabled">
            <summary>
            Gets or sets if the Pivot Table Columns Totals are enabled.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.PivotColumnsTotalsMode">
            <summary>
            Gets or sets the Pivot Table Columns totals display mode.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.GroupingColumns">
            <summary>
            Collection of Bound fields (columns) that the datagrid will be using to group rows
            </summary>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotColumns"/>
            <seealso cref="P:VIBlend.WPF.Controls.DataGrid.BoundPivotRows"/>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.GroupingEnabled">
            <summary>
            Determines if grouping is enabled or not
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.PivotValuesOnRows">
            <summary>
            Determines whether the pivot table values are displayed next to the pivot rows or next to pivot columns
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.IsDisposed">
            <summary>
            Gets or sets a value indicating whether this instance is disposed.
            </summary>
            <value>
            	<c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.CanDispose">
            <summary>
            Gets or sets a value indicating whether this instance can dispose.
            </summary>
            <value>
            	<c>true</c> if this instance can dispose; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AutoSync">
            <summary>
            Gets or sets a value indicating whether the data is synchronized.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.VerticalGridlinesBrush">
            <summary>
            Gets or sets the Vertical grid lines brush
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.HorizontalGridlinesBrush">
            <summary>
            Gets or sets the Horizontal grid lines brush
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.SelectionBorderBrush">
            <summary>
            Gets or sets the selection grid lines brush
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.DisabledBackgroundBrush">
            <summary>
            Gets or sets the disabled background brush.
            </summary>
            <value>
            The disabled background brush.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.CellsAreaBackground">
            <summary>
            Gets or sets the background of the data grid's cells area
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets whether the DataGrid will automatically bind to all columns available in the data source.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.Localization">
            <summary>
            Gets or sets the DataGrid localization.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.VirtualModeCellDefault">
            <summary>
            Gets or sets whether the grid cells are in virtual mode by default
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AllowHierarchyItemHighlightOnCellSelection">
            <summary>
            Gets or sets whether the header items are highlighted when the respective cells are selected.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AllowDragDropIndication">
            <summary>
            Gets or sets whether the dragging indicator is displayed
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.SelectionBorderEnabled">
            <summary>
            Determines whether the grid should draw a border arround the selected grid cells
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.SelectionBorderWidth">
            <summary>
            Gets or sets the width in pixel of the selection border
            </summary>
            <remarks>
            For estetic reasons the maximum value of this property is limited to 2 pixels
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.GridLinesDisplayMode">
            <summary>
            Determines how the grid lines will be displayed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.EnableAutoRowNumber">
            <summary>
            Gets or sets whether to automatically set the Row Number as a Text in the Row Headers.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AllowCellMerge">
            <summary>
            Gets or sets whether the cells could be merged
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ToolTipsEnabled">
            <summary>
            Gets or sets whether tooltips are enabled.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ToolTipShowDelay">
            <summary>
            Gets or sets the delay before the tooltip shows.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ToolTipDuration">
            <summary>
            Gets or sets the tooltip display duration..
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ToolTip">
            <summary>
            Gets the ToolTip control that is used in the data grid.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.ToolTipShow">
            <summary>
            Occurs before a tooltip is shown and provides a way to customize the tooltip text.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.ToolTipShown">
            <summary>
            Occurs after a tooltip is shown and provides a way to customize the tooltip text.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.BindField">
            <summary>
            Occurs when a the grid binds to data column from the data source
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.BindingComplete">
            <summary>
            Occurs when a data binding operation is complete.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.BindingStart">
            <summary>
            Occurs when a data binding operation is complete.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.LoadRowDetails">
            <summary>
            Occurs when the grid loads the RowDetails DataTemplate
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.FilterValuesLoaded">
            <summary>
            Occurs when the grid's filtering window is initializing the listbox with filtering values.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.CellsArea">
            <summary>
            Gets the data field area
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.SelectionMode">
            <summary>
            Gets or sets the grid cells selection mode
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.MultipleSelectionEnabled">
            <summary>
            Gets or sets whether multiple selection is enabled
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.RowsHierarchy">
            <summary>
            Gets the Rows hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.RowsHierarchyItems">
            <summary>
            Gets the HierarchyItemsCollection that holds the Rows HierarchyItems
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ColumnsHierarchy">
            <summary>
            Gets the Columns hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ColumnsHierarchyItems">
            <summary>
            Gets the HierarchyItemsCollection that holds the Column HierarchyItems
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AllowCopy">
            <summary>
            Gets or sets whether to enable clipboard copy operations within the grid cells
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AllowPaste">
            <summary>
            Gets or sets whether to enable clipboard paste operations within the grid cells
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.IsManualEditUpdateModeEnabled">
            <summary>
            Gets or sets a value indicating whether when the editor is closed, the data is updated automatically or manually.
            This mode is appropriate when you use editors in unbound mode.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.IsColumnsSortOrderDESC">
            <summary>
            Gets the current sorting direction
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.IsRowsSortOrderDESC">
            <summary>
            Gets the current sorting direction of the grid rows
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.SortColumnItem">
            <summary>
            Gets the Column HierarchyItem used to sort the grid's data.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.SortRowItem">
            <summary>
            Gets the Row HierarchyItem used to sort the grid's data.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.PropertyChanged">
            <summary>
            Occurs when a property is changed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ResizeTooltipEnabled">
            <summary>
            Gets or sets a value indicating whether a tooltip is shown when you resize rows or columns.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.ResizeTooltip">
            <summary>
            Gets the resize tooltip.
            </summary>
            <value>The resize tooltip.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.AlternateRowColorsEnabled">
            <summary>
            Gets or sets whether the alternate row colors is enabled.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.FullPrefetchMode">
            <summary>
            Gets or sets whether the content is prefetched for all grid cells.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.CellsHighlightMode">
            <summary>
            Gets or sets the grid cells highlight mode.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.CellsHighlightOnHierarchyItemMoveEnabled">
            <summary>
            Gets or sets whether the cells highlight is enabled when the mouse moves within the Rows or Columns Hierarchy.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGrid.CellsHighlightBrush">
            <summary>
            Gets or sets the selection grid lines brush
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemExpanded">
            <summary>
            Occurs when a HierarchyItem is expanded
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemMouseClick">
            <summary>
            Occurs when a HierarchyItem is clicked
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemMouseDown">
            <summary>
            Occurs when the user presses a mouse button over HierarchyItem.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemMouseUp">
            <summary>
            Occurs when the user releases a mouse button over HierarchyItem.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemMouseDoubleClick">
            <summary>
            Occurs when a HierarchyItem is double clicked.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemMouseMove">
            <summary>
            Occurs when the mouse cursor is over the item.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemCollapsed">
            <summary>
            Occurs when a HierarchyItem is collapsed
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemExpanding">
            <summary>
            Occurs when a HierarchyItem is expanding
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemCollapsing">
            <summary>
            Occurs when a HierarchyItem is collapsing
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemDragStarted">
            <summary>
            Occurs when a drag operation with header item is started
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemDragEnded">
            <summary>
            Occurs when a drag operation with header item is ended
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemDragStarting">
            <summary>
            Occurs when a drag operation with header item is starting
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemDragEnding">
            <summary>
            Occurs when a drag operation with header item is ending
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemSelectionChanged">
            <summary>
            Occurs when the selection of a HierarchyItem has changed.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.HierarchyItemPropertyChanged">
            <summary>
            Occurs when a HierarchyItem property has changed.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellDataAggregation">
            <summary>
            Occurs when the DataGrid displays a pivot table and the BoundField's function is set to custom. You can handle this event to manually aggregate the cell's value.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellDataExportFormat">
            <summary>
            Occurs when the DataGrid is exported to excel, xml, csv or html.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellKeyDown">
            <summary>
            Occurs when a key is down.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellKeyUp">
            <summary>
            Occurs when a key is up.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellEditorActivate">
            <summary>
            Occurs when a cell editor is being activated
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellEditorActivated">
            <summary>
             Occurs after the cell editor is activated.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellEditorDeActivate">
            <summary>
            Occurs when a cell editor is being activated
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellEditorDeActivated">
            <summary>
             Occurs after the cell editor is deactivated.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellValidating">
            <summary>
            Occurs when a cell is validating
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellValidated">
            <summary>
             Occurs when a cell is validated
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellEndEdit">
            <summary>
            Occurs when a cell edit is ending
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellBeginEdit">
            <summary>
            Occurs when a cell edit is begining
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellMouseDown">
            <summary>
            Occurs when the mouse button is down in a cell bounds
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellMouseUp">
            <summary>
            Occurs when the mouse button is released
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellMouseClick">
            <summary>
            Occurs when the mouse button is clicked in cell bounds
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellMouseDoubleClick">
            <summary>
            Occurs when the mouse button is double clicked inside the cell bounds.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellMouseMove">
            <summary>
            Occurs when a cell edit is ending
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellMouseEnter">
            <summary>
            Occurs when the mouse pointer has entered cell bounds
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellMouseLeave">
            <summary>
            Occurs when the mouse pointer has left cell bounds
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellValueNeeded">
            <summary>
            Occurs before a grid cell is displayed. Use this event in virtual mode to specify the content of the grid cell
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellValueChanging">
            <summary>
            Occurs before a grid cell value changes.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellValueChanged">
            <summary>
            Occurs after the value of a grid cell changed.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGrid.CellSelectionChanged">
            <summary>
            Occurs when the grid cells selection has changed
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.ScrollAnimationModes">
            <summary>
            Enumeration of the scroll animation modes.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.ToolTipEventHandler">
            <summary>
            Represents a ToolTip event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A ToolTipEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.BindFieldHandler">
            <summary>
            Represents a Data field binding event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A BoundFieldEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.SELECTION_MODE">
            <summary>
            Enumeration of the grid cells selection mode
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.SELECTION_MODE.FULL_ROW_SELECT">
            <summary>
            Full row selection
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.SELECTION_MODE.FULL_COLUMN_SELECT">
            <summary>
            Full column selection
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.SELECTION_MODE.CELL_SELECT">
            <summary>
            Cell selection
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.PrefetchMode">
            <summary>
            Enumeration of the Data Prefetch modes.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.PrefetchMode.Auto">
            <summary>
            Automatically optimize based on the amount of data loaded in the data grid.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.PrefetchMode.Enabled">
            <summary>
            Prefetch is Enabled.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.PrefetchMode.Disabled">
            <summary>
            Prefetch is Disabled.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CELLS_HIGHLIGHT_MODE">
            <summary>
            Enumeration of the grid cells highlight mode
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.CELLS_HIGHLIGHT_MODE.DISABLED">
            <summary>
            Disable grid cells highlight.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.CELLS_HIGHLIGHT_MODE.SINGLE_CELL">
            <summary>
            Highlight individual grid cells.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.CELLS_HIGHLIGHT_MODE.COLUMN">
            <summary>
            Highlight all grid cells in a column.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGrid.CELLS_HIGHLIGHT_MODE.ROW">
            <summary>
            Highlight all grid cells in a row.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.HierarchyItemMouseEventHandler">
            <summary>
            Represents a HierarchyItem mouse event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A HierarchyItemMouseEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.HierarchyItemMouseButtonEventHandler">
            <summary>
            Represents a HierarchyItem mouse button event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A HierarchyItemMouseButtonEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.HierarchyItemEventHandler">
            <summary>
            Represents a HierarchyItem event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A HierarchyItemEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.HierarchyItemCancelEventHandler">
            <summary>
            Represents a HierarchyItem cancel event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A HierarchyItemCancelEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.HierarchyItemDragCancelEventHandler">
            <summary>
            Represents a HierarchyItem drag cancel event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A HierarchyItemDragCancelEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.HierarchyItemDragEventHandler">
            <summary>
            Represents a HierarchyItem drag event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A HierarchyItemDragEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellDataExportFormatEventHandler">
            <summary>
            Represents a Cell event delegate.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellEventHandler">
            <summary>
            Represents a GridCell event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A GridCellEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellCancelEventHandler">
            <summary>
            Represents a GridCell cancel event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A GridCellCancelEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellValueChangingEventHandler">
            <summary>
            Represents a GridCell value changing event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A CellValueChangingEventArgs that contains the event's data</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellMouseEventHandler">
            <summary>
            Represents a GridCell mouse event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A GridCellMouseEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellMouseButtonEventHandler">
            <summary>
            Represents a GridCell mouse button event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A GridCellMouseButtonEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellKeyEventHandler">
            <summary>
            Represents a GridCell key event delegate.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellEditorActivateEventHandler">
            <summary>
            Represents a GridCell editor activation event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A EditorActivationCancelEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGrid.CellValueNeededEventHandler">
            <summary>
            Represents a GridCell value needed event delegate.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="args">A CellValueNeededEventArgs that contains the event's data.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.EditorActivationCancelEventArgs">
            <summary>
            Represents Grid cell editor activation event arguments that supports event canceling.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellCancelEventArgs">
            <summary>
            Represents a grid cell cancel event argument.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellCancelEventArgs.#ctor(VIBlend.WPF.Controls.GridCell)">
            <summary>
            Constructor
            </summary>
            <param name="cell">GridCell associated with the event</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellCancelEventArgs.Cancel">
            <summary>
            Determines if the event is canceled.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.EditorActivationCancelEventArgs.#ctor(VIBlend.WPF.Controls.GridCell,VIBlend.WPF.Controls.EditorActivationFlags,System.Windows.Input.KeyEventArgs)">
            <summary>
            EditorActivationCancelEventArgs constructor.
            </summary>
            <param name="cell">A refrence to the grid cell.</param>
            <param name="editorActivationFlag">Bitmask that represents the editor activation flags.</param>
            <param name="keyArgs">Reference to the key event arguments.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.EditorActivationCancelEventArgs.ActivationFlags">
            <summary>
            Gets the bitmaks that represents the cell editor's activation flags.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.EditorActivationCancelEventArgs.KeyEventArgs">
            <summary>
            Gets the KeyEventArgs. 
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.EditorActivationFlags">
            <summary>
            Enumaration of the grid editor activation flags
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.EditorActivationFlags.MOUSE_MOVE">
            <summary>
            Mouse move activation.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.EditorActivationFlags.MOUSE_CLICK">
            <summary>
            Mouse click activation.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.EditorActivationFlags.MOUSE_DBLCLICK">
            <summary>
            Mouse double click activation.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.EditorActivationFlags.KEY_PRESS">
            <summary>
            Key Press activation.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.EditorActivationFlags.KEY_PRESS_ENTER">
            <summary>
            Key Press Enter activation.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.EditorActivationFlags.PROGRAMMATIC">
            <summary>
            Manual activation via API calls.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.EditorActivationFlags.MOUSE_CLICK_SELECTED_CELL">
            <summary>
            Mouse click on selected cell activation.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridDataConnection.BeginEdit(System.Object)">
            <summary> 
            Puts the entity into editing mode if possible
            </summary>
            <param name="dataItem">The entity to edit</param> 
            <returns>True if editing was started</returns> 
        </member>
        <member name="M:VIBlend.WPF.Controls.GridDataConnection.CancelEdit(System.Object)">
            <summary>
            Cancels the current entity editing and exits the editing mode. 
            </summary>
            <param name="dataItem">The entity being edited</param>
            <returns>True if a cancellation operation was invoked.</returns> 
        </member>
        <member name="M:VIBlend.WPF.Controls.GridDataConnection.EndEdit(System.Object)">
            <summary>
            Commits the current entity editing and exits the editing mode. 
            </summary>
            <param name="dataItem">The entity being edited</param>
            <returns>True if a commit operation was invoked.</returns> 
        </member>
        <member name="M:VIBlend.WPF.Controls.GridDataConnection.ItemProperties.CopyPropertiesFromItem(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Copies the properties from item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridDataConnection.ItemProperties.CopyPropertiesToItem(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Copies the properties to item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemFilter">
            <summary>
            Represents a HierarchyItem and Filter pair.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemFilter.Item">
            <summary>
            HierarchyItem in the item-filter pair.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemFilter.Filter">
            <summary>
            Filter in the item-filter pair.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.Hierarchy">
            <summary>
            Represents a base class for a Hierarchy which hosts one or more row, or column items
            </summary>
            <summary>
            Represents a base class for a Hierarchy which hosts one or more row, or column items
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.itemsCanvas">
            <summary>
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.UpdateClipRegion">
            <summary>
            Updates the Clip region.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.ApplyFilters">
            <summary>
            Applies the item filters.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.PointToLeafItem(System.Windows.Point,System.Int32@)">
            <summary>
            Finds the leave level HierarchyItem at a specific horizontal or vertical offset
            </summary>
            <param name="point">Represent the offset relative to the grid's top-left corner</param>
            <param name="itemIndex">returns the index of the item</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.HitTest(System.Windows.Point)">
            <summary>
            Performs a HitTest at a specific point within the Hierarchy
            </summary>
            <param name="point">Point representing the X, Y coordinate to test. The point must be relative to the top-left corner of the grid control</param>
            <returns>The method returns the HierarchyItem located at the position pointed by the point parameter. If there is no HierarchyItem at this position the method returns NULL.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.GetNextItem(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Returns the item displayed immediatelly after a specified item
            </summary>
            <param name="item">HierarchyItem to retrive the next item for.</param>
            <returns>The item after the specified item, or null if a next item does not exist.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.GetPreviousItem(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Returns the item displayed immediatelly before a specified item
            </summary>
            <param name="item">HierarchyItem to retrive the previous item for.</param>
            <returns>The item displayed before the specified item, or null if a previous item does not exist.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.ExpandAllItems">
            <summary>
            Expands all items in the Hierarchy
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.CollapseAllItems">
            <summary>
            Collapses all items in the Hierarchy
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.SetColumnWidth(System.Int32,System.Double)">
            <summary>
            Sets the width of a column within the hierarchy
            </summary>
            <param name="columnIndex">The zero-based index of the column</param>
            <param name="width">The new width of the column</param>
            <returns>The method returns if the new width is applied</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.GetColumnWidth(System.Int32)">
            <summary>
            Gets the width of a column within the hierarchy
            </summary>
            <param name="columnIndex">The zero-based index of the column</param>
            <returns>The method returns the width of the column at the specified index or 0.0 if the index is invalid.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.AutoResize">
            <summary>
            Automatically resizes the items in the Hierarchy for best visual appearance.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.AutoResize(VIBlend.WPF.Controls.AutoResizeMode)">
            <summary>
            Automatically resizes the items in the Hierarchy for best visual appearance.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.Clear">
            <summary>
            Removes all HierarchyItems and their settings.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.GetChildItemsRecursive">
            <summary>
            Retrieves all child HierarchyItems at all levels
            </summary>
            <returns>List of HierarchyItems</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.ShowHiddenItems">
            <summary>
            Sets the status of all hidden items to visible.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.IsSummaryItem(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Checks if a specific item is a Summary Item
            </summary>
            <param name="item">The item to check</param>
            <returns>The method returns true if the item is a summary item</returns>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.columnWidths">
            <summary>
            Collection that contains the column widths.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.rowHeights">
            <summary>
            Collection that contains the row heights.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.hierarchyItems">
            <summary>
            Collection of the HierarchyItems in this heirarchy.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.hierarchySummaryItems">
            <summary>
            Collection of the summary HierarchyItems in this heirarchy.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.bounds">
            <summary>
            Bounds of the Hiearchy.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.visibleLeafItems">
            <summary>
            Collection of the visible leaf node HierarchyItems.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.HierarchyItemDataTemplateProperty">
            <summary>
            DependencyProperty that represents the default HierarchyItem DataTemplate.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.HierarchyItemDataContextProperty">
            <summary>
            DependencyProperty that represents the default HierarchyItem DataContext.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.HierarchyItemDefaultStyleProperty">
            <summary>
            DependencyProperty that represents the default HierarchyItemElement Style.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.GetVisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.SortByLabel">
            <summary>
            Sorts the HierarchyItems by their Label (Text).
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.SortByLabel(System.Boolean)">
            <summary>
            Sorts the HierarchyItems by their Label (Text).
            </summary>
            <param name="sortInDescendingOrder">Flag indicating whether to sort in descending order.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.SortByLabel(System.Boolean,System.Boolean)">
            <summary>
            Sorts the HierarchyItems by their Label (Text).
            </summary>
            <param name="sortInDescendingOrder">Flag indicating whether to sort in descending order.</param>
            <param name="applySortToSummaryItems">Flag indicating whether to sort the summary items.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.SortByLabel(System.Boolean,System.Boolean,System.Collections.Generic.IComparer{VIBlend.WPF.Controls.HierarchyItem})">
            <summary>
            Sorts the HierarchyItems by their Label (Text).
            </summary>
            <param name="sortInDescendingOrder">Flag indicating whether to sort in descending order.</param>
            <param name="applySortToSummaryItems">Flag indicating whether to sort the summary items.</param>
            <param name="Comparer">The IComparer implementation to use when comparing the HierarchyItem elements. Setting this parameter to null will invoke the default implementation.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.OnPropertyChanged(System.String)">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.Hierarchy.selectedItems">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.BeginSelectionUpdate">
            <summary>
            Begins selection update. Marks all selected items for unselection.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.EndSelectionUpdate">
            <summary>
            Ends selection update. Removes all items which are marked as unselected.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.SelectItem(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Selects an item in the Hierarchy
            </summary>
            <param name="item">Item to select</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.UnSelectItem(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            UnSelects an item in the Hierarchy
            </summary>
            <param name="item">Item to UnSelect</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.ClearSelection">
            <summary>
            Unselects all selected items.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.Hierarchy.IsItemSelected(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Checks if an item is selected
            </summary>
            <param name="item">Item to check</param>
            <returns>The method returns true if the respective item is selected. If the item is not selected, or cannot be found within the hierarchy, the method returns false.</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.Fixed">
            <summary>
            Determines if the Hierarchy is fixed or not. Fixed Hierarchies are not affected by the scrolling of the data grid's content
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.Filters">
            <summary>
            Collection that holds the filters associated with the items in the hierarchy.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.Visible">
            <summary>
            Determines whether the hierarchy is visible
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.Items">
            <summary>
            Gets the items of the Hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.SummaryItems">
            <summary>
            Gets the summary items of the Hierarchy 
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.ShowExpandCollapseButtons">
            <summary>
            Determines whether to show the expand/collapse buttons on the items hosted by the hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.HierarchyDepth">
            <summary>
            Gets the depth of the hierarchy.
            </summary>
            <remarks>
            Use this method do termine how many levels of nesting exist in the hierarchy. For example if you have only a item with one or child items the depth is 2.
            If these child items have their own child items, the depth increases.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.X">
            <summary>
            Returns the horizontal position of Hierarchy relative to the top-left corner of the grid control
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.Y">
            <summary>
            Returns the horizontal position of Hierarchy relative to the top-left corner of the grid control
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.TotalItemsCount">
            <summary>
            Gets the total number of HierarchyItems hosted by the Hierarchy. This includes both Hierarchy items and Summary items. Hidden items are also counted.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.GridControl">
            <summary>
            Retruns a reference to the Grid control hosting the hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.HiddenItems">
            <summary>
            Gets the hidden items
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.HierarchyItemDataTemplate">
            <summary>
            Gets or sets the default HierarchyItem DataTemplate.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.HierarchyItemDataContext">
            <summary>
            Gets or sets the default HierarchyItem DataContext.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.HierarchyItemDefaultStyle">
            <summary>
            Gets or sets the default HierarchyItem Style
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.AllowResize">
            <summary>
            Gets or sets whether the HierarchyItems resizing is allowed
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.AllowDragDrop">
            <summary>
            Gets or sets whether drag and drop is enabled for this Hierarchy
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.Hierarchy.PropertyChanged">
            <summary>
            Occurs when a Hierarchy property has changed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.Hierarchy.SelectedItems">
            <summary>
            Gets the selected items
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellKeyEventArgs.#ctor(VIBlend.WPF.Controls.GridCell,System.Windows.Input.KeyEventArgs)">
            <summary>
            Constructor
            </summary>
            <param name="cell">GridCell</param>
            <param name="args">KeyboardEventArgs</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellKeyEventArgs.Cell">
            <summary>
            The grid cell associated with the event
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellKeyEventArgs.KeyEventArgs">
            <summary>
            Returns the MouseEventArgs.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridGroupsHeaderItem">
            <summary>
            Represents an Item into the DataGridGroupsHeader.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.FilterButtonVisibilityProperty">
            <summary>
            DependencyProperty that represents whether the Filter button is visible.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.DataGridGroupsHeaderItem"/> class.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.ArrowBrushProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.CloseButtonStyleProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnFilterButtonClicked(System.EventArgs)">
            <summary>
            Raises the FilterButtonClicked event.
            </summary>
            <param name="args">EventArgs that represents the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of WPF layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of WPF layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnApplyTemplate">
            <summary>
            Applies the DataGridGroupsHeaderItem Template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.CloseButtonVisibilityProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnCloseButtonClick">
            <summary>
            Called when the close button is clicked.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            </summary>
            <param name="e"></param>
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            </summary>
            <param name="e"></param>
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnDataGridGroupsHeaderItemStateChanged">
            <summary>
            Called when tab item's state is changed.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.OnClick">
            <summary>
            Occurs when the button is clicked.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.FilterButtonVisibility">
            <summary>
            Gets or sets the Filter button's visibility.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.CloseButton">
            <summary>
            Gets the close button.
            </summary>
            <value>The close button.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.Column">
            <summary>
            Gets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.ArrowBrush">
            <summary>
            Gets or sets the item's arrow brush.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.FilterButtonClicked">
            <summary>
            Occurs when the user clicks on the filter button of the HierarchyItemElement
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.DataGridGroupsHeader">
            <summary>
            Gets the parent TabControl.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.ParentItemsControl">
            <summary>
            Gets or sets a reference to the parent ItemsControl.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.CloseButtonVisibility">
            <summary>
            Gets or sets the close button visibility.
            </summary>
            <value>The close button visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.CloseButtonAction">
            <summary>
            Gets or sets the close button action.
            </summary>
            <value>The close button action.</value>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.CloseButtonClick">
            <summary>
            Occurs when the close button is clicked.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGridGroupsHeaderItem.DataGridGroupsHeaderItemStateChanged">
            <summary>
            Occurs when button's UI state is changed.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.ToolTipEventArgs">
            <summary>
            Represents ToolTip event argument
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.ToolTipEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Constructor
            </summary>
            <param name="rowItem">HierarchyItem representing the row where the tooltip will be displayed.</param>
            <param name="columnItem">HierarchyItem representing the column where the tooltip will be displayed.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.ToolTipEventArgs.RowItem">
            <summary>
            HierarchyItem representing the row where the tooltip will be displayed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.ToolTipEventArgs.ColumnItem">
            <summary>
            HierarchyItem representing the column where the tooltip will be displayed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.ToolTipEventArgs.Handled">
            <summary>
            Determines whether the event was handled
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.ToolTipEventArgs.ToolTipContent">
            <summary>
            Gets or sets the content of the tooltip
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.FilterValuesLoadedEventArgs">
            <summary>
            Represents a class which stores the FilterValuesLoaded event data.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterValuesLoadedEventArgs.#ctor(VIBlend.WPF.Controls.CheckedListBox)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.FilterValuesLoadedEventArgs"/> class.
            </summary>
            <param name="listBox">The list box.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.FilterValuesLoadedEventArgs.FilterValues">
            <summary>
            Gets the filter values.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.FilterValuesLoadedEventArgs.FilterListBox">
            <summary>
            Gets the filter list box.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.RowDetailsEventArgs">
            <summary>
            Represents a RowDetails event arguments.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowDetailsEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,System.Windows.FrameworkElement)">
            <summary>
            RowDetailsEventArgs constructor.
            </summary>
            <param name="rowItem">Row HierarchyItem.</param>
            <param name="rowDetailsElement">FrameworkElement that represents the row details.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowDetailsEventArgs.RowDetailsElement">
            <summary>
            Gets the row details element.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowDetailsEventArgs.RowItem">
            <summary>
            Gets the row HierarchyItem.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.GridCellDataSource">
            <summary>
            Grid Cell data source enumeration
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellDataSource.NotSet">
            <summary>
            No data source, specified
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellDataSource.Static">
            <summary>
            Static data source type is the default for unbound mode
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellDataSource.Virtual">
            <summary>
            The cell's content is fetched through a callback in a virtual mode
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellDataSource.DataBound">
            <summary>
            The cell's content is fetched from the data source
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellDataSource.DataBoundPivot">
            <summary>
            The cell's content is fetched from the data source using pivot table aggregation functions
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellSpan">
            <summary>
            Defines a Cell span / cell merge inside the data grid's cells area (CellsArea) 
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellSpan.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Int32,System.Int32)">
            <summary>
            CellSpan constructor.
            </summary>
            <param name="rowItem">GridCell row item.</param>
            <param name="columnItem">GridCell column item.</param>
            <param name="rowsCount">Number of rows in to span.</param>
            <param name="columnsCount">Number of columns to span.</param>
        </member>
        <member name="F:VIBlend.WPF.Controls.CellSpan.RowItem">
            <summary>
            Row HierarchyItem corresponding to the grid cell
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.CellSpan.ColumnItem">
            <summary>
            Column HierarchyItem corresponding to the grid cell
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.CellSpan.RowsCount">
            <summary>
            Number of Rows to span / marge
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.CellSpan.ColumnsCount">
            <summary>
             Number of Columns to span / merge
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.GridCell">
            <summary>
            Defines an grid cell inside the CellsArea
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridCell.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.CellsArea)">
            <summary>
            GridCell constructor.
            </summary>
            <param name="rowItem">Row HierarchyItem of the GridCell.</param>
            <param name="columnItem">Column HierarchyItem of the GridCell.</param>
            <param name="CellsArea">CellsArea hosting the GridCell control.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.CellsArea">
            <summary>
            The CellsArea where cell is located
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.Bounds">
            <summary>
            Cell's bounds
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.RowItem">
            <summary>
            The Row HierarchyItem corresponding to the grid cell
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.ColumnItem">
            <summary>
            The Column HierarchyItem corresponding to the grid cell
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.CellSpan">
            <summary>
            The CellSpan of the GridCell.
            </summary>
            <remarks>The CellSpan for a grid cell which does not participate in a cell merge contains exactly one row and one column</remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.Selected">
            <summary>
            The selection state of the grid cell
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.Locked">
            <summary>
            The locked state of the grid cell
            </summary>
            <remarks>
            Locked cells cannot be modified by the user via an editor
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.Style">
            <summary>
            Gets or sets the Style of the GridCellElement
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.Value">
            <summary>
            Gets or sets the value of the grid cell.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCell.EditorElement">
            <summary>
            Gets the editor element if the cell is being edited
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemEventArgs">
            <summary>
            Represents a HierarchyItem event argument
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Constructor
            </summary>
            <param name="item">A HierarchyItem associated with the event.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemEventArgs.HierarchyItem">
            <summary>
            The HierarchyItem associated with the event.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemCancelEventArgs">
            <summary>
            Represents a HierarchyItem cancel event argument
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemCancelEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Constructor
            </summary>
            <param name="item">A HierarchyItem associated with the event.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemCancelEventArgs.Cancel">
            <summary>
            Determines whether the event is canceled
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemElement">
            <summary>
            Represents a HierarchyItemElement control.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemElement.#ctor">
            <summary>
            HierarchyItemElement constructor.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemElement.OnApplyTemplate">
            <summary>
            Overridden implementation of OnApplyTemplate.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.IsExpandedProperty">
            <summary>
            DependencyProperty that represents whether the Control is in Expanded state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.IsHoverProperty">
            <summary>
            DependencyProperty that represents whether the Control is in Hover state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.IsSelectedProperty">
            <summary>
            DependencyProperty that represents whether the Control is in Selected state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ToggleButtonVisibilityProperty">
            <summary>
            DependencyProperty that represents whether the Expand/Collapse Toggle button is visible.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ExpandButtonHorizontalAlignmentProperty">
            <summary>
            DependencyProperty that represents the Horizontal alignment of the Expand/Collapse Toggle button.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ExpandButtonVerticalAlignmentProperty">
            <summary>
            DependencyProperty that represents the Vertical alignment of the Expand/Collapse Toggle button.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ContentPaddingProperty">
            <summary>
            DependencyProperty that represents the padding for the control's content.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.SortButtonVisibilityProperty">
            <summary>
            DependencyProperty that represents whether the Sort button is visible.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.FilterButtonVisibilityProperty">
            <summary>
            DependencyProperty that represents whether the Filter button is visible.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.IsSortOrderAscendingProperty">
            <summary>
            DependencyProperty that represents whether the Sort button's state is in Ascending or Descending direction.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.UseDefaultContentTemplateProperty">
            <summary>
            DependencyProperty that represents whether the use default content template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.UseCustomContentTemplateProperty">
            <summary>
            DependencyProperty that represents whether the use custom content template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.TextProperty">
            <summary>
            DependencyProperty that represents the Text that will be used with the default content template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.TextBlockStyleProperty">
            <summary>
            DependencyProperty that represents the TextWrapping mode that will be used with the default content template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ImageSourceProperty">
            <summary>
            DependencyProperty that represents the Image that will be used with the default content template.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemElement.OnSortButtonClicked(System.EventArgs)">
            <summary>
            Raises the SortButtonClicked event.
            </summary>
            <param name="args">EventArgs that represents the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemElement.OnFilterButtonClicked(System.EventArgs)">
            <summary>
            Raises the FilterButtonClicked event.
            </summary>
            <param name="args">EventArgs that represents the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemElement.OnExpanding(System.EventArgs)">
            <summary>
            Raises the Expanding event.
            </summary>
            <param name="args">EventArgs that represents the event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemElement.OnCollapsing(System.EventArgs)">
            <summary>
            Raises the Collapsing event.
            </summary>
            <param name="args">EventArgs that represents the event arguments.</param>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundHoverProperty">
            <summary>
            DependencyProperty that represents the Background Brush in Hover state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundSelectedProperty">
            <summary>
            DependencyProperty that represents the Background Brush in Selected state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundSelectedHoverProperty">
            <summary>
            DependencyProperty that represents the Background Brush in SelectedHover state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundDisabledProperty">
            <summary>
            DependencyProperty that represents the Background Brush in Disabled state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundCurrentProperty">
            <summary>
            DependencyProperty that represents the Foreground in Hover state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundHoverProperty">
            <summary>
            DependencyProperty that represents the Foreground in Hover state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundSelectedProperty">
            <summary>
            DependencyProperty that represents the Foreground in Selected state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundSelectedHoverProperty">
            <summary>
            DependencyProperty that represents the Foreground in SelectedHover state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundDisabledProperty">
            <summary>
            DependencyProperty that represents the Foreground in Disabled state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.TextBlockStyle">
            <summary>
            Gets or sets the TextBlock Style used with the default content template.
            </summary>
            <value>The TextBlock Style.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ExpandButtonHorizontalAlignment">
            <summary>
            Gets or sets the Horizontal alignment of the Expand/Collapse Button.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ExpandButtonVerticalAlignment">
            <summary>
            Gets or sets the Vertical alignment of the Expand/Collapse Button.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ContentPadding">
            <summary>
            Gets or sets the padding of the control's content.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsHover">
            <summary>
            Gets or sets the control's Hover state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsHoverEffectEnabled">
            <summary>
            Gets or sets whether the control's Hover effect is enabled.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsSelected">
            <summary>
            Gets or sets the control's Selected state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsExpanded">
            <summary>
            Gets or sets the control's Expanded state.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.HierarchyItemElement.SortButtonClicked">
            <summary>
            Occurs when the user clicks on the sort button of the HierarchyItemElement
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.HierarchyItemElement.FilterButtonClicked">
            <summary>
            Occurs when the user clicks on the filter button of the HierarchyItemElement
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.HierarchyItemElement.Expanding">
            <summary>
            Occurs before the HierarchyItemElement transitions into an expanded state
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.HierarchyItemElement.Collapsing">
            <summary>
            Occurs befor the HierarchyItemElement transitions into a collapsed state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ToggleButtonVisibility">
            <summary>
            Gets or sets the Expand/Collapse Toggle button's visibility.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.SortButtonVisibility">
            <summary>
            Gets or sets the Sort button's visibility.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsFilterButtonEnabled">
            <summary>
            Gets or sets whether the filter button is always visible;
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsFilterButtonAlwaysVisible">
            <summary>
            Gets or sets whether the filter button is always visible;
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsFiltered">
            <summary>
            Gets or sets whether the item is filtered.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.FilterButtonVisibility">
            <summary>
            Gets or sets the Filter button's visibility.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.IsSortOrderAscending">
            <summary>
            Gets or sets whether the sort button's state is in Ascending or Descending order.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.UseCustomContentTemplate">
            <summary>
            Gets or sets whether to use custom Content Template
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.UseDefaultContentTemplate">
            <summary>
            Gets or sets whether to use default Content Template
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.Text">
            <summary>
            Gets or sets the Text to use default Content Template
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ImageSource">
            <summary>
            Gets or sets the ImageSource to use default Content Template
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundHover">
            <summary>
            Gets or sets the brush the provides the background of the element in Hover state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundSelected">
            <summary>
            Gets or sets the brush the provides the background of the element in Selected state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundSelectedHover">
            <summary>
            Gets or sets the brush the provides the background of the element in SelectedHover state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.BackgroundDisabled">
            <summary>
            Gets or sets the brush the provides the background of the element in Disabled state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundCurrent">
            <summary>
            Gets the Current Foreground color.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundHover">
            <summary>
            Gets or sets the Foreground in Hover state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundSelected">
            <summary>
            Gets or sets the Foreground in Selected state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundSelectedHover">
            <summary>
            Gets or sets the Foreground in SelectedHover state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.ForegroundDisabled">
            <summary>
            Gets or sets the Foreground in in Disabled state
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemElement.HierarchyItem">
            <summary>
            Gets or sets the HierarchyItem associatated with the HierarchyItemElement.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.BoundItemsCollection`1">
            <summary>
            Represents a list of BoundField or BoundValueField items which represent data binding assiciations between columns in the data source and HierarchyItems in the data grid
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.BoundItemsCollection`1.items">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.OnCollectionChanged">
            <summary>
            Raises the CollectionChanged event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.#ctor">
            <summary>
            BoundItemsCollection constructor.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.Add(`0)">
            <summary>
            Adds an item to the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.Clear">
            <summary>
            Removes all items form the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator to support iterating through the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.IndexOf(`0)">
            <summary>
            Returns the index of an item
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.Insert(`0,System.Int32)">
            <summary>
            Inserts an item at a specific position
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.Remove(`0)">
            <summary>
            Removes an item from the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes an item located at a specific index
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the collection's content to an array
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to support iterating through the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#Clear">
            <summary>
            Removes all items from the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Checks if the collection contains a specific item
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of a specific item
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item at a specific position
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a specific item from the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes a item located a specific position from the collection
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.BoundItemsCollection`1.CollectionChanged">
            <summary>
            Occurs when the collection has changed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundItemsCollection`1.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundItemsCollection`1.Item(System.Int32)">
            <summary>
            Returns a reference to a item located at a specific index
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#ICollection#IsSynchronized">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#ICollection#SyncRoot">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#IsFixedSize">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#IsReadOnly">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundItemsCollection`1.System#Collections#IList#Item(System.Int32)">
            <exclude/>
        </member>
        <member name="T:VIBlend.WPF.Controls.PivotTotalsMode">
            <summary>
            Enumeration of the Pivot Table totals display modes.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotTotalsMode.DISPLAY_SUBTOTALS">
            <summary>
            SubTotals only.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotTotalsMode.DISPLAY_GRANDTOTALS">
            <summary>
            GrandTotals only.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotTotalsMode.DISPLAY_BOTH">
            <summary>
            Both SubTotals and GrandTotals.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.BoundFieldFilter">
            <summary>
            Represents a data field filter used during the data binding process
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundFieldFilter.#ctor">
            <summary>
            BoundFieldFilter constructor
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundFieldFilter.DataField">
            <summary>
            The name of the column from the data source
            </summary>
            <remarks>
            When you bind to a database table, this property should be set to the name of the column that you want to bind.
            If you want to bind to a list of objects, the value of this property should match the name of an object's public property which you want to bind.
            Note that the value of this property is case sensitive
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundFieldFilter.Filters">
            <summary>
            Collection of filters applied to the DataField
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundFieldFilter.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="T:VIBlend.WPF.Controls.GridBindingState">
            <summary>
            Enumaration of the grid's binding states
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridBindingState.Unbound">
            <summary>
            The data grid is not bound to a data source
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridBindingState.Bound">
            <summary>
            The data grid is bound to a data source
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridBindingState.BoundPivot">
            <summary>
            The data grid is bound to a data source and displays a pivot view of the data
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.BoundFieldEventArgs">
            <summary>
            Represents an event argument for HierarchyItem data binding event.
            </summary>
            <remarks>
            VIBlend DataGrid for Silverlight triggers HierarchyItem data binding events when a column from the data source is being bound.
            These events are useful when the user wants to intercept the data binding process for perticular fields and configure 
            the properties of the respective HierarchyItem. For example, you can use this event to associate the data bound HierarchyItem
            with a grid cell editor, specify data formatting rules, text alignment properties and more.
            </remarks>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundFieldEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.BoundField,VIBlend.WPF.Controls.DataGrid)">
            <summary>
            Constructor
            </summary>
            <param name="hierarchyItem">The BoundField HierarchyItem</param>
            <param name="boundField">The BoundField</param>
            <param name="gridControl">The GridControl</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundFieldEventArgs.BoundField">
            <summary>
            Reference to the BoundField 
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundFieldEventArgs.BoundFieldIndex">
            <summary>
            Gets the index of corresponding row or column in the data source.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundFieldEventArgs.HierarchyItem">
            <summary>
            Reference to the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundFieldEventArgs.GridControl">
            <summary>
            Reference to the grid control
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.BoundField">
            <summary>
            Represents a data binding relationship between a column in the data source, and a HierarchyItem
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundField.#ctor">
            <summary>
            BoundField constructor.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundField.#ctor(System.String,System.String)">
            <summary>
            BoundField constructor.
            </summary>
            <param name="text">The test to display in the HierarchyItem.</param>
            <param name="dataField">DataField to bind to.</param>
        </member>
        <member name="F:VIBlend.WPF.Controls.BoundField.text">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.BoundField.dataField">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.Text">
            <summary>
            The text (caption) of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.TextBlockStyle">
            <summary>
            Gets or sets the TextBlock style of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.DataField">
            <summary>
            The name of the column from the data source
            </summary>
            <remarks>
            When you bind to a database table, this property should be set to the name of the column that you want to bind.
            If you want to bind to a list of objects, the value of this property should match the name of an object's public property which you want to bind.
            Note that the value of this property is case sensitive
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellDataTemplate">
            <summary>
            Gets or sets the grid cells template of the HierarchyItems bound to this field
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellEditTemplate">
            <summary>
            Gets or sets the grid cells edit template of the HierarchyItems bound to this field
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellEditorActivationFlags">
            <summary>
            Gets or sets the grid cells editor activatation flags of the HierarchyItems bound to this field
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellEditorDeActivationFlags">
            <summary>
            Gets or sets the grid cells editor de-activatation flags of the HierarchyItems bound to this field
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellHorizontalContentAlignment">
            <summary>
            Gets or sets the cell horizontal content alignment.
            </summary>
            <value>
            The cell horizontal content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellVerticalContentAlignment">
            <summary>
            Gets or sets the cell vertical content alignment.
            </summary>
            <value>
            The cell vertical content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.HorizontalContentAlignment">
            <summary>
            Gets or sets the horizontal content alignment.
            </summary>
            <value>
            The horizontal content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.VerticalContentAlignment">
            <summary>
            Gets or sets the vertical content alignment.
            </summary>
            <value>
            The vertical content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellTextFormatString">
            <summary>
            Gets or sets the grid cells text format string.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellTextBlockStyle">
            <summary>
            Gets or sets the grid cells TextBlock style.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.CellStyle">
            <summary>
            Gets or sets the grid cells style of the HierarchyItems bound to this field.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.DataTemplate">
            <summary>
            Gets or sets the DataTemplate of the HierarchyItems bound to this field
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.DataContext">
            <summary>
            Gets or sets the DataContext of the HierarchyItems bound to this field
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.AllowFiltering">
            <summary>
            Gets or sets if the HierarchyItems bound to this field are filterable
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.Style">
            <summary>
            Gets or sets the Style of the HierarchyItems bound to this field are filterable
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.SortMode">
            <summary>
            Gets or sets if the HierarchyItems bound to this field are sortable
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.Width">
            <summary>
            Gets or sets the Width of the HierarchyItems bound to this field 
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundField.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="T:VIBlend.WPF.Controls.PivotFieldFunction">
            <summary>
            Represents an aggregation function which will be used to calculate the value of a grid cell
            when the grid is bound to a data source in a pivot table mode
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Sum">
            <summary>
            Sum
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Count">
            <summary>
            Count
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Average">
            <summary>
            Average
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Max">
            <summary>
            Maximal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Min">
            <summary>
            Minimal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.StDev">
            <summary>
            Standard deviation on a sample.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.StDevP">
            <summary>
            Standard deviation on an entire population.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Var">
            <summary>
            Variance on a sample.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.VarP">
            <summary>
            Variance on an entire population.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotFieldFunction.Custom">
            <summary>
            Custom Aggregation function
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.BoundValueField">
            <summary>
            Represents a data binding relationship between a column in the data source, and a Summary HierarchyItem which specifies a Pivot table value item
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundValueField.#ctor">
            <summary>
            BoundValueField default constructor.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.BoundValueField.#ctor(System.String,System.String,VIBlend.WPF.Controls.PivotFieldFunction)">
            <summary>
            BoundValueField constructor.
            </summary>
            <param name="text">Text to display in the HierarchyItem.</param>
            <param name="dataField">DataField to bind to.</param>
            <param name="function">Data aggregation function.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.BoundValueField.Function">
            <summary>
            Specifies the pivot table data aggregation function. This function will be used to calculate the values of the data grid cells
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.ContextMenuShowingEventArgs">
            <summary>
            Provides data for the ContextMenu events.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemDragCancelEventArgs">
            <summary>
            Represents a HierarchyItem drag cancel event argument
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemDragCancelEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Constructor
            </summary>
            <param name="sourceItem">Drag source HierarhcyItem</param>
            <param name="targetItem">Drop target HierarchyItem</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemDragCancelEventArgs.Cancel">
            <summary>
            Determines whether the event is canceled
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItemsCollection">
            <summary>
            Represents a collection of HierarchyItems
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.OnCollectionChanged">
            <summary>
            Raises the CollectionChanged event
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.Hierarchy)">
            <summary>
            Constructor
            </summary>
            <param name="parentItem">HierarchyItem which hosts the collection</param>
            <param name="parentHierarchy">Hierarchy which hosts the collection</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.Add(System.String)">
            <summary>
            Adds a new item to the collection
            </summary>
            <param name="ItemText">Item text</param>
            <returns>The method returns a reference to the HierarchyItem object which is added</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.Add(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Adds a new item to the collection
            </summary>
            <param name="item">Reference to the HierarchyItem object to add</param>
            <returns>The method returns a reference to the HierarchyItem object which is added</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.Clear">
            <summary>
            Removes all items from the collection
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection. 
            </summary>
            <returns>An IEnumerator for the entire collection.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.IndexOf(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Searches for the specified Item and returns the zero-based index of the first occurrence within the entire collection
            </summary>
            <param name="item">The item to location in the collection</param>
            <returns>The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a HierarchyItem into the collection at the specified index.
            </summary>
            <param name="Index">The zero-based index at which item will be inserted.</param>
            <param name="ItemText">The text of the HierarchyItem</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.Remove(VIBlend.WPF.Controls.HierarchyItem)">
            <summary>
            Removes the first occurrence of a specific HierarchyItem from the collection
            </summary>
            <param name="item">The HierarchyItem to remove from the collection</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the HierarchyItem at the specified index of the collection
            </summary>
            <param name="index">The zero-based index of the HierarchyItem to remove</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItemsCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection
            </summary>
            <returns>An IEnumerator for the entire collection</returns>
        </member>
        <member name="E:VIBlend.WPF.Controls.HierarchyItemsCollection.CollectionChanged">
            <summary>
            Occurs when the collection has changed
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemsCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemsCollection.OwnerHierarchy">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemsCollection.OwnerItem">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemsCollection.System#Collections#ICollection#IsSynchronized">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItemsCollection.System#Collections#ICollection#SyncRoot">
            <exclude/>
        </member>
        <member name="T:VIBlend.WPF.Controls.FilterWindow">
            <summary>
            FilterWindow
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.FilterWindow"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterWindow.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Window.Closing"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.FilterWindow.DataGrid">
            <summary>
            Gets or sets the data grid.
            </summary>
            <value>
            The data grid.
            </value>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridPivotDesign">
            <summary>
            Represents a DataGrid Pivot Design control.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.OnPivotDesignPanelContextMenuOpening(VIBlend.WPF.Controls.PivotDesignPanelContextMenuOpeningEventArgs)">
            <summary>
            Raises the <see cref="E:ContextMenuOpening"/> event.
            </summary>
            <param name="args">The <see cref="T:VIBlend.WPF.Controls.PivotDesignPanelContextMenuOpeningEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.DataGridPivotDesign"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.UpdateTextsWithLocalizationNames">
            <summary>
            Updates the strings.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.ItemTemplateProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.ContextMenuItemStyleProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.ListBoxStyleProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.ListBoxItemStyleProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.DisplayModeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.RowAreaVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.ColumnAreaVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.DataAreaVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.FilterAreaVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.FieldsAreaVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.DataGridProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.UpdateFields">
            <summary>
            Updates the fields.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.DisplayModeComboBoxVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesign.SplitterBackgroundProperty">
            <summary>
            DependencyProperty that represents the Foreground in Hover state.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.GetDataFieldsListBox">
            <summary>
            Gets the data fields list box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.GetFilterAreaListBox">
            <summary>
            Gets the filter area list box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.GetColumnsAreaListBox">
            <summary>
            Gets the columns area list box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.GetRowsAreaListBox">
            <summary>
            Gets the rows area list box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.GetFieldsAreaListBox">
            <summary>
            Gets the fields area list box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.InitializeListItemContextMenu">
            <summary>
            Initializes the list item context menu.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.UpdatePivotTable">
            <summary>
            Updates the pivot table.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.BeginUpdate">
            <summary>
            Begins the update.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.EndUpdate">
            <summary>
            Ends the update.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.UpdateStyles">
            <summary>
            Updates the styles.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.InitializeDragDrop(VIBlend.WPF.Controls.ListBox)">
            <summary>
            Initializes the drag drop.
            </summary>
            <param name="listBox">The list box.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.OnPivotTableUpdated">
            <summary>
            Called when the pivot table is updated.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesign.OnPivotValueFieldTextNeeded(VIBlend.WPF.Controls.BoundValueField)">
            <summary>
            Called when the pivot table is updated.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGridPivotDesign.PivotDesignPanelContextMenuOpening">
            <summary>
            Occurs when the context menu is opening.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.PivotDesignPanelContextMenu">
            <summary>
            Gets the pivot design panel context menu.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.LocalizationProvider">
            <summary>
            Gets or sets the localization provider.
            </summary>
            <value>The localization provider.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.ItemTemplate">
            <summary>
            Gets or sets the item template.
            </summary>
            <value>The item template.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.ContextMenuItemStyle">
            <summary>
            Gets or sets the context menu item style.
            </summary>
            <value>The context menu item style.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.ListBoxStyle">
            <summary>
            Gets or sets the list box style.
            </summary>
            <value>The list box style.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.ListBoxItemStyle">
            <summary>
            Gets or sets the list box item style.
            </summary>
            <value>The list box item style.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.DisplayMode">
            <summary>
            Gets or sets the display mode.
            </summary>
            <value>The display mode.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.RowAreaVisibility">
            <summary>
            Gets or sets the row area visibility.
            </summary>
            <value>The row area visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.ColumnAreaVisibility">
            <summary>
            Gets or sets the column area visibility.
            </summary>
            <value>The column area visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.DataAreaVisibility">
            <summary>
            Gets or sets the data area visibility.
            </summary>
            <value>The data area visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.FilterAreaVisibility">
            <summary>
            Gets or sets the filter area visibility.
            </summary>
            <value>The filter area visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.FieldsAreaVisibility">
            <summary>
            Gets or sets the fields area visibility.
            </summary>
            <value>The fields area visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.DataGrid">
            <summary>
            Gets or sets the fields area visibility.
            </summary>
            <value>The fields area visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.DisplayModeComboBoxVisibility">
            <summary>
            Gets or sets the display mode combo box visibility.
            </summary>
            <value>The display mode combo box visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.SplitterBackground">
            <summary>
            Gets or sets the splitter background.
            </summary>
            <value>The splitter background.</value>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGridPivotDesign.PivotTableUpdated">
            <summary>
            Occurs when the pivot table is updated.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGridPivotDesign.PivotValueFieldTextNeeded">
            <summary>
            Occurs when text for the pivot value field is needed.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridPivotDesign.PivotValueFieldTextNeededEventHandler">
            <exclude/>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridPivotDesign.PivotValueFieldTextNeededEventArgs">
            <summary>
            Represents PivotValueFieldNameNeeded event arguments.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.PivotValueFieldTextNeededEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:VIBlend.WPF.Controls.DataGridPivotDesign.PivotValueFieldTextNeededEventArgs"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridPivotDesign.PivotValueFieldTextNeededEventArgs.Field">
            <summary>
            BoundValueField instance.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.PivotDesignDisplayMode">
            <summary>
            Represents the PivotDesignDisplayMode enumeration.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotDesignDisplayMode.FieldsAndAreasStacked">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotDesignDisplayMode.AreasSectionOnlyVertical">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.PivotDesignDisplayMode.AreasSectionOnlyStacked">
            <exclude/>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellMouseEventArgs">
            <summary>
            Represents a grid cell mouse event argument.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellMouseEventArgs.#ctor(VIBlend.WPF.Controls.GridCell,System.Windows.Input.MouseEventArgs)">
            <summary>
            Constructor
            </summary>
            <param name="cell">GridCell</param>
            <param name="args">MouseEventArgs</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellMouseEventArgs.Cell">
            <summary>
            The grid cell associated with the event
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellMouseEventArgs.MouseEventArgs">
            <summary>
            Returns the MouseEventArgs.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellMouseButtonEventArgs">
            <summary>
            Represents a grid cell mouse button event argument.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellMouseButtonEventArgs.#ctor(VIBlend.WPF.Controls.GridCell,System.Windows.Input.MouseButtonEventArgs,System.Windows.Input.MouseButton)">
            <summary>
            Constructor
            </summary>
            <param name="cell">GridCell</param>
            <param name="args">MouseEventArgs</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellMouseButtonEventArgs.Cell">
            <summary>
            The grid cell associated with the event.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellMouseButtonEventArgs.MouseButtonEventArgs">
            <summary>
            Returns the MouseEventArgs.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellMouseButtonEventArgs.ChangedButton">
            <summary>
            Gets the mouse button assoicated with the event.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationProviderBase">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationProviderBase.GetString(VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames)">
            <exclude/>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationProvider">
            <summary>
            Represents a class that is used to localize the strings used in the DataGrid control.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationProvider.GetString(VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
            <exclude/>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames">
            <summary>
            Represents the LocalizationNames enumeration.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.FieldsSectionAndAreasSectionStackad">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.AreasSectionOnlyVertical">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.AreasSectionOnlyStacked">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.FilterAreaName">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.DataAreaName">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.ColumnAreaName">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.RowAreaName">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.DragFieldsToAreasBelow">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.DeferLayoutUpdate">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Update">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.DragFieldsBetweenAreas">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.MoveUp">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.MoveDown">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.MoveToRowArea">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.MoveToColumnArea">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.MoveToFilterArea">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.MoveToDataArea">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.RemoveField">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.SelectItems">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Function">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Average">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Min">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Max">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Sum">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Count">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Product">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.StDev">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.StDevP">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.Var">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridPivotDesignLocalizationNames.VarP">
            <exclude/>
        </member>
        <member name="T:VIBlend.WPF.Controls.AutoResizeMode">
            <summary>
            Enumeration of the Auto resize modes
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.AutoResizeMode.FIT_ITEM_CONTENT">
            <summary>
            Resizes for best fit of the HierarchyItems content.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.AutoResizeMode.FIT_CELL_CONTENT">
            <summary>
            Resizes for best fit of the Grid Cells content.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.AutoResizeMode.FIT_ALL">
            <summary>
            Resizes for best overall fit.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.RowGroupDataContext">
            <summary>
            Represents the group information passed as a DataContext to the RowGroupHeaderElement
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupDataContext.GroupName">
            <summary>
            Gets or sets the name of the group
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupDataContext.RowItem">
            <summary>
            Gets or sets the Row HierarchyItem for this group
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowGroupDataContext.DetailsText">
            <summary>
            Gets or sets the details text of the the row group
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.GridItemSortMode">
            <summary>
            Enumeration of the grid item sort modes
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridItemSortMode.Default">
            <summary>
            Sorting is enabled through a call to the SortBy method
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridItemSortMode.Automatic">
            <summary>
            Sorting is enabled when the user clicks on the item
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridItemSortMode.NotSortable">
            <summary>
            Sorting is not allowed
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.HierarchyItem">
            <summary>
            Represents a item in the rows or columns header area of the data grid
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.Finalize">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.Expand">
            <summary>
            Expands the HierarchyItem
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.Collapse">
            <summary>
            Expands the HierarchyItem
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.Delete">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.AutoResize(VIBlend.WPF.Controls.AutoResizeMode)">
            <summary>
            Automatically resizes the HierarchyItem for best fit.
            </summary>
            <param name="autoResizeMode">AutoResize mode</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItem.DataTemplateProperty">
            <summary>
            DependencyProperty that represents the HierarchyItem DataTemplate.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.HierarchyItem.DataContextProperty">
            <summary>
            DependencyProperty that represents the HierarchyItem DataTemplate.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.HierarchyItem.GetChildItemsRecursive">
            <summary>
            Retrieves all child HierarchyItems at all levels
            </summary>
            <returns>List of HierarchyItems</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.MinimumWidth">
            <summary>
            Gets or sets the Minimum Width of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.MinimumHeight">
            <summary>
            Gets or sets the Minimum Height of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.MaximumWidth">
            <summary>
            Gets or sets the Maximum Width of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.MaximumHeight">
            <summary>
            Gets or sets the Maximum Height of the HierarchyItem.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.IsTotal">
            <summary>
            Checks if the HierarchyItem is a Total of other items in the same collection.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.SortMode">
            <summary>
            Gets or sets the sort mode for the item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.AllowFiltering">
            <summary>
            Gets or sets whether the grid's data can be filtered by this column
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.BoundField">
            <summary>
            Gets the bound field which establishes a data binding relationship between the items and a data column in the data source
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Hierarchy">
            <summary>
            Gets a reference to the Hierarchy which hosts the items
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ExpandCollapseEnabled">
            <summary>
            Determines whether expand / collapse is enabled
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.DoubleClickExpandCollapseEnabled">
            <summary>
            Gets or sets a value indicating whether the item can be expanded or collapsed when it is double-clicked.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ChildItemsDepth">
            <summary>
            Returns the depth of the child items hierarchy under this item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ItemsCount">
            <summary>
            Gets the count of the child items
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.WidthWithChildren">
            <summary>
            Returns the width of the Item as it is rendered
            This width includes the child items if the item is expanded
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.DisplayWidth">
            <summary>
            Gets the display width.
            </summary>
            <value>The display width.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.HeightWithChildren">
            <summary>
            Returns the height of the Item as it is rendered.
            This height includes the child items if the item is expanded
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Width">
            <summary>
            Gets or sets the Width of the item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Height">
            <summary>
            Gets or sets the Height of the item excluding the details area.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.TotalHeight">
            <summary>
            Gets the Height of the item including the details area is visible.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.RowDetailsHeight">
            <summary>
            Gets or sets the Height of the HierarchyItem's details area
            </summary>
            <remarks>
            This property is applicable to HierarchyItem instances hosted within the RowsHierarchy. The property is ignored for instances hosted in the ColumnsHierarchy.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.RowDetailsVisiblity">
            <summary>
            Gets or sets whether the details area is visible.
            </summary>
            <remarks>
            This property is applicable to HierarchyItem instances hosted within the RowsHierarchy. The property is ignored for instances hosted in the ColumnsHierarchy.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.X">
            <summary>
            Gets the Item's horizontal offset relative to the parent hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Y">
            <summary>
            Gets the Item's vertical offset relative to the parent hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Enabled">
            <summary>
            Determines whether the items is enabled or disabled
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Visible">
            <summary>
            Gets whether the item is visible based on the current scroll position
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Selected">
            <summary>
            Determines whether the item is selected
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.IsItemCellSelected">
            <summary>
            Returns true when the item has at least on corresponding grid cell which is selected
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.DrawBounds">
            <summary>
            Gets the draw bounds of the HierarchyItem.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.IsHover">
            <summary>
            Checks whether the HierarchyItem is hovered.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.IsFilterButtonAlwaysVisible">
            <summary>
            Gets or sets whether the filter button is always visible;
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Expanded">
            <summary>
            Checks if the item is currently expanded
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.TooltipContent">
             <summary>
            Gets or sets the tooltip content of this item
             </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Text">
             <summary>
            Gets or sets the text of this item
             </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ContentType">
             <summary>
            Gets or sets the cells content type for this item
             </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.TotalItemsCount">
            <summary>
            Returns the number of child items and child summary items of the item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.VisibleItemsCountRecursive">
            <summary>
            Returns the number child items and summary items which are currently visible.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.VisibleItemsCount">
            <summary>
            Returns the number child items and summary items which are currently visible.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.DesiredWidth">
            <summary>
            The desired width of the hierarchy item.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Depth">
            <summary>
            Gets the depth of the item in the hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.IsRowsHierarchyItem">
            <summary>
            Checks if the HierarchyItem is part of the rows hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.IsColumnsHierarchyItem">
            <summary>
            Checks if the HierarchyItem is part of the columns hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.GridControl">
            <summary>
            Returns the parent DataGrid control.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.BoundFieldIndex">
            <summary>
            Gets the index of corresponding row or column in the data source.
            </summary>
            <remarks>
            This property is valid only when the data grid is working in databound mode.
            If the item is one of the RowsHierarchy items you can use this propery to determine the
            row number in the data source. If the item is one of the ColumnsHierarchy items,
            you can use the property to retrieve the column index in the data source.
            Please note, that this propery is not applicable in Pivot bound mode because in these cases the data is aggregated.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.BoundPivotValue">
            <summary>
            Gets the bound value associated to the item when the data grid is working in pivot mode.
            </summary>
            <remarks>
            This property is valid only when the data grid is working in pivot mode, otherwise it will return null.        
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ItemIndex">
            <summary>
            Gets the index of the item within the items collection of the parent item or hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Hidden">
            <summary>
            Determines whether the item is visible
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Filtered">
            <summary>
            Checks if the HierarchyItem is filtered.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ItemData">
            <summary>
            Gets or sets the data object of the item
            </summary>
            <remarks>
            Use this property to associate the item with a custom object
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Items">
            <summary>
            Collection representing the child items of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.SummaryItems">
            <summary>
            Collection represeting the child summary items of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.IsSummaryItem">
            <summary>
            Checks if this item is a summary item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ParentItem">
             <summary>
            Gets the parent item if exist
             </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.HierarchyItem.PropertyChanged">
            <summary>
            Occurs when a HierarhcyItem property has changed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ItemAbove">
            <summary>
            Returns the Item displayed above this item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ItemBelow">
            <summary>
            Returns the Item displayed below this item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ItemLeft">
            <summary>
            Returns the Item displayed on the left of the this item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ItemRight">
            <summary>
            Returns the Item displayed on the right of the this item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.DataTemplate">
            <summary>
            Gets or sets the DataTemplate of the HierarchyItem.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.DataContext">
            <summary>
            Gets or sets the DataContext of the HierarchyItem.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.ImageSource">
            <summary>
            Gets or sets the ImageSource of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Style">
            <summary>
            Gets or sets the Style applied to the <see cref="E:VIBlend.Silverlight.Controls.HierarchyItemElement"/> of the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellDataSource">
            <summary>
            Gets or sets the DataSource property for all grid cells under the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellEditorActivationFlags">
            <summary>
            Gets or sets the Cell editor activation bitmask.
            </summary>
            <remarks>
            Use this method to get/set a cell editor activation bitmask for all grid cells under this HierarchyItem.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellEditorDeActivationFlags">
            <summary>
            Gets or sets the Cell editor deactivation bitmask.
            </summary>
            <remarks>
            Use this method to get/set a cell editor deactivation bitmask for all grid cells under this HierarchyItem.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellStyle">
            <summary>
            Gets or sets the Style applied to all cells under the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellDataContext">
            <summary>
            Gets or sets the DataContext applied to all cells under the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellDataTemplate">
            <summary>
            Gets or sets the DataTemplate applied to all cells under the HierarchyItem
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellEditTemplate">
            <summary>
            Gets or sets the DataTemplate applied to all cells under the HierarchyItem when the cell is being edited
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.RowDetailsDataTemplate">
            <summary>
            Gets or sets the Row Details DataTemplate of the HierarchyItem
            </summary>
            <remarks>
            This property is applicable to HierarchyItem instances hosted within the RowsHierarchy. The property is ignored for instances hosted in the ColumnsHierarchy.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.RowDetailsDataContext">
            <summary>
            Gets or sets the Row Details DataContext of the HierarchyItem
            </summary>
            <remarks>
            This property is applicable to HierarchyItem instances hosted within the RowsHierarchy. The property is ignored for instances hosted in the ColumnsHierarchy.
            </remarks>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellTextFormatString">
            <summary>
            Gets or sets the cell text format string.
            </summary>
            <value>The cell text format string.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellTextBlockStyle">
            <summary>
            Gets or sets the Cells TextBlock style.
            </summary>
            <value>The TextBlock style.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellHorizontalContentAlignment">
            <summary>
            Gets or sets the cell horizontal content alignment.
            </summary>
            <value>
            The cell horizontal content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.CellVerticalContentAlignment">
            <summary>
            Gets or sets the cell vertical content alignment.
            </summary>
            <value>
            The cell vertical content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.HorizontalContentAlignment">
            <summary>
            Gets or sets the  horizontal content alignment.
            </summary>
            <value>
            The  horizontal content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.VerticalContentAlignment">
            <summary>
            Gets or sets the  vertical content alignment.
            </summary>
            <value>
            The  vertical content alignment.
            </value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.TextBlockStyle">
            <summary>
            Gets or sets the TextBlock style of the HierarchyItem.
            </summary>
            <value>The TextBlock style.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.Cells">
            <summary>
            Gets all grid cells for this hierarchy item
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.HierarchyItem.NonEmptyCells">
            <summary>
            Gets all non-empty grid cells for this hierarchy item
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.GridCellElement">
            <summary>
            Represents a data grid cell element.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridCellElement.#ctor">
            <summary>
            GridCellElement constructor.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.GridCellElement.OnApplyTemplate">
            <summary>
            Overridden implementation of OnApplyTemplate.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.IsSelectedProperty">
            <summary>
            DependencyProperty that represents whether the GridCellElement is in Selected state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.HorizontalCellBordersBrushProperty">
            <summary>
            DependencyProperty that represents the Horzontal Border Brush property.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.VerticalCellBordersBrushProperty">
            <summary>
            DependencyProperty that represents the Vertical Border Brush property.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.VerticalCellBordersVisibilityProperty">
            <summary>
            DependencyProperty that represents the Vertical Border Visibility property.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.HorizontalCellBordersVisibilityProperty">
            <summary>
            DependencyProperty that represents the Horizontal Border Brush property.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.BackgroundAlternateProperty">
            <summary>
            DependencyProperty that represents the Background Alternate Brush.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.BackgroundSelectedProperty">
            <summary>
            DependencyProperty that represents the Background Brush in Selected state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.BackgroundAlternateSelectedProperty">
            <summary>
            DependencyProperty that represents the Background Alternate Brush in Selected state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.BackgroundDisabledProperty">
            <summary>
            DependencyProperty that represents the Background Brush in Disabled state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.CurrentBackgroundProperty">
            <summary>
            DependencyProperty that represents the Background Brush in Disabled state.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.UseDefaultContentTemplateProperty">
            <summary>
            DependencyProperty that represents whether the use default content template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.UseCustomContentTemplateProperty">
            <summary>
            DependencyProperty that represents whether the use custom content template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.TextProperty">
            <summary>
            DependencyProperty that represents the Text that will be used with the default content template.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.GridCellElement.TextBlockStyleProperty">
            <summary>
            DependencyProperty that represents the TextWrapping mode that will be used with the default content template.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.IsSelected">
            <summary>
            Gets or sets the control's Selected state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.HorizontalCellBordersBrush">
            <summary>
            Gets or sets the Horizontal border Brush
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.VerticalCellBordersBrush">
            <summary>
            Gets or sets the Vertical border Brush
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.VerticalCellBordersVisibility">
            <summary>
            Gets or sets the Vertical border's visibility.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.HorizontalCellBordersVisibility">
            <summary>
            Gets or sets the Horizontal border's visibility.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.BackgroundAlternate">
            <summary>
            Gets or sets the brush the provides the alternate background of the element.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.BackgroundSelected">
            <summary>
            Gets or sets the brush the provides the background of the element in Selected state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.BackgroundAlternateSelected">
            <summary>
            Gets or sets the brush the provides the alternate background of the element in Selected state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.BackgroundDisabled">
            <summary>
            Gets or sets the brush the provides the background of the element in Disabled state.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.CellID">
            <summary>
            Gets the Id of the grid cell.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.TemplateKey">
            <summary>
            Gets or sets the elements template key.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.UseDefaultContentTemplate">
            <summary>
            Gets or sets whether to use default Content Template
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.UseCustomContentTemplate">
            <summary>
            Gets or sets whether to use custom Content Template
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.Text">
            <summary>
            Gets or sets the Text to use default Content Template
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.GridCellElement.TextBlockStyle">
            <summary>
            Gets or sets the TextBlock Style used with the default content template.
            </summary>
            <value>The TextBlock Style.</value>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridLocalizationBase">
            <summary>
            Represents a base class for the DataGrid localization providers.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridLocalization">
            <summary>
            Represents a class that is used to localize the strings used in the DataGrid control.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.LocalizationNames">
            <summary>
            Represents the LocalizationNames enumeration.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.ContextMenuSortSmallestToLargest">
            <summary>
            ContextMenu item - sort smallest to largest.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.ContextMenuSortLargestToSmallest">
            <summary>
            ContextMenu item - sort largest to smalles.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.ContextMenuRemoveSort">
            <summary>
            ContextMenu item - remove sort.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.ContextMenuFilter">
            <summary>
            ContextMenu item - filter.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.ContextMenuClearFilter">
            <summary>
            ContextMenu item - clear filter.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterWindowOrRadioButton">
            <summary>
            FilterWindow - OrButtonText.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterWindowAndRadioButton">
            <summary>
            FilterWindow - AndButtonText.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterWindowOkButton">
            <summary>
            FilterWindow - OkButtonText.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterWindowCancelButton">
            <summary>
            FilterWindow - CancelButtonText.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterWindowFilterBy">
            <summary>
            FilterWindow - FilterByText.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorSelect">
            <summary>
            FilterWindow - Select.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorEqual">
            <summary>
            FilterWindow - Equal.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorNotEqual">
            <summary>
            FilterWindow - Not Equal.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorLessThan">
            <summary>
            FilterWindow - Less Than.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorLessThanOrEqual">
            <summary>
            FilterWindow - Less Than or Equal.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorGreaterThan">
            <summary>
            FilterWindow - Greater Than.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorGreaterThanOrEqual">
            <summary>
            FilterWindow - Greater Than or Equal.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorIsNull">
            <summary>
            FilterWindow - Is Null.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorIsNotNull">
            <summary>
            FilterWindow - Is Not Null.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorIsEmpty">
            <summary>
            FilterWindow - Is Empty.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorIsNotEmpty">
            <summary>
            FilterWindow - Is Not Empty.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorContains">
            <summary>
            FilterWindow - Contains.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorDoesNotContain">
            <summary>
            FilterWindow - Does not Contain.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorStartsWith">
            <summary>
            FilterWindow - Starts With.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorEndsWith">
            <summary>
            FilterWindow - Ends With.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterOperatorRegularExpression">
            <summary>
            FilterWindow - Regular Expression.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterValueText">
            <summary>
            FilterWindow - Value.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterShowRowsWhereText">
            <summary>
            FilterWindow - Show Rows Where.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterCriteriaDefinition">
            <summary>
            FilterWindow - Criteria Definition,
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterButtonCustomFilter">
            <summary>
            FilterWindow - Button Custom Filter Text,
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterButtonBasicFilter">
            <summary>
            FilterWindow - Button Custom Basic Filter,
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterItemsAllText">
            <summary>
            FilterWindow - Items (All) Text,
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterItemsBlanksText">
            <summary>
            FilterWindow - Items (Blanks) Text,
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.FilterItemsNullsText">
            <summary>
            FilterWindow - Items (Nulls) Text,
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.PivotTableSubTotalText">
            <summary>
            Pivot Table - SubTotal Text
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.LocalizationNames.PivotTableGrandTotalText">
            <summary>
            Pivot Table - GrandTotal Text
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.ColumnsHierarchy">
            <summary>
            Represents a ColumnsHierarchy
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.ColumnsHierarchy.#ctor(VIBlend.WPF.Controls.DataGrid)">
            <summary>
            Constructor
            </summary>
            <param name="gridControl">Reference to the grid control hosting the hierarchy</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.ColumnsHierarchy.UpdateClipRegion">
            <summary>
            Updates the Clip region.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.ColumnsHierarchy.ResizeColumnsToFitGridWidth">
            <summary>
            Resizes the width of the columns to fit to the grid's width.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.ColumnsHierarchy.ResizeColumnsToFitGridWidth(System.Int32)">
            <summary>
            Resizes the width of the columns to fit to the grid's width.
            </summary>
            <param name="resizeColumn">The resize column.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.ColumnsHierarchy.AutoResize(VIBlend.WPF.Controls.AutoResizeMode)">
            <summary>
            Resizes the items in the hierarchy for optimal visual appearance
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.ColumnsHierarchy.AutoStretchColumns">
            <summary>
            Gets or sets whether to automatically resize the columns when the total width is less than the width of the grid control.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.ColumnsHierarchy.Height">
            <summary>
            Gets the Height of the Hierarchy in pixels
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.ColumnsHierarchy.Width">
            <summary>
            Gets the Width of the Hierarchy in pixels
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellValueChangingEventArgs">
            <summary>
            Represents a grid cell value change event arguments.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellValueChangingEventArgs.#ctor(VIBlend.WPF.Controls.GridCell,System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellValueChangingEventArgs.NewValue">
            <summary>
            The new value of the grid cell.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.RowsHierarchy">
            <summary>
            Represents a Rows Hierarchy
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowsHierarchy.#ctor(VIBlend.WPF.Controls.DataGrid)">
            <summary>
            Constructor
            </summary>
            <param name="gridControl">Reference to the grid control hosting the hierarchy</param>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowsHierarchy.CompactStyleRenderingEnabledProperty">
            <summary>
            DependencyProperty that represents whether the Rows hierarchy is rendered in compact style.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.RowsHierarchy.CompactStyleRenderingItemsIndentProperty">
            <summary>
            DependencyProperty that represents the child items indent in the Rows hierarchy when the hierarchy is rendered in compact style.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowsHierarchy.UpdateClipRegion">
            <summary>
            Updates the Clip region.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowsHierarchy.SetColumnWidth(System.Int32,System.Double)">
            <summary>
            Sets the width of a column within the hierarchy
            </summary>
            <param name="columnIndex">Zero-based index of the column</param>
            <param name="width">New width in pixels</param>
            <returns>The method returns true if the new width is applied</returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.RowsHierarchy.AutoResize(VIBlend.WPF.Controls.AutoResizeMode)">
            <summary>
            Resizes the items in the hierarchy for optimal visual appearance
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowsHierarchy.CompactStyleRenderingEnabled">
            <summary>
            Gets or sets whether the Rows hierarchy is rendered in compact style where each child item appears under the parent item instead of on its right side
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowsHierarchy.CompactStyleRenderingItemsIndent">
            <summary>
            Gets or sets the child items indent in the Rows hierarchy when the hierarchy is rendered in compact style.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowsHierarchy.Height">
            <summary>
            Gets the Height of the Hierarchy
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.RowsHierarchy.Width">
            <summary>
            Gets the Width of the Hierarchy
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.FilterOperator">
            <summary>
            Enumeration of the Filter Operators
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.FilterOperator.AND">
            <summary>
            Logical AND operator
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.FilterOperator.OR">
            <summary>
            Logical OR operator
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.IFilterBase">
            <summary>
            Represents a base filter interface
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.IFilterBase.Evaluate(System.Object)">
            <summary>
            Evalutes a value against the filter
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:VIBlend.WPF.Controls.IFilter`1">
            <summary>
            Generic filter interface for type T
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.IFilter`1.Value">
            <summary>
            Filter's value
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.FilterGroup`1">
            <summary>
            Represents a group of filters
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.AddFilter(VIBlend.WPF.Controls.FilterOperator,VIBlend.WPF.Controls.IFilterBase)">
            <summary>
            Adds a filter to the group
            </summary>
            <param name="filterOperator">The logical operator which concatinates this filter to the previous filters in the group</param>
            <param name="filter">The new filter to add</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.RemoveFilter(VIBlend.WPF.Controls.IFilterBase)">
            <summary>
            Removes a filter from the group
            </summary>
            <param name="filter">A reference to the filter that will be removed</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.GetOperatorAt(System.Int32)">
            <summary>
            Returns the logical operator at a specific index
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.SetOperatorAt(System.Int32,VIBlend.WPF.Controls.FilterOperator)">
            <summary>
            Sets the logical operator at a specific index
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.GetFilterAt(System.Int32)">
            <summary>
            Gets a reference to the filter at a specific index
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.SetFilterAt(System.Int32,VIBlend.WPF.Controls.IFilterBase)">
            <summary>
            Sets the filter at a specific index
            </summary>
            <param name="index">The index of the filter in the group</param>
            <param name="filter">A reference to the new filter value</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.Clear">
            <summary>
            Removes all filters from the group
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.FilterGroup`1.Evaluate(System.Object)">
            <summary>
            Evaluates the filter expression represented by the group against a specific value
            </summary>
            <param name="value">The value to evaluate</param>
            <returns>Returns true if the value passes through the filter</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.FilterGroup`1.FiltersCount">
            <summary>
            Gets the number of filters in the group
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.StringFilterComparisonOperator">
            <summary>
            Enumeration of the string filter comparison operators
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.EMPTY">
            <summary>
            Empty string
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.NOT_EMPTY">
            <summary>
            Non-empty string
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.NULL">
            <summary>
            NULL value
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.NOT_NULL">
            <summary>
            Non-Null value
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.CONTAINS">
            <summary>
            Contains a specific substring
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.DOES_NOT_CONTAIN">
            <summary>
            Does not contain a specific substirng
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.STARTS_WITH">
            <summary>
            Starts with a specific prefix
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.ENDS_WITH">
            <summary>
            Ends with a specific string
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.StringFilterComparisonOperator.REGEX">
            <summary>
            Regular expression
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.StringFilter">
            <summary>
            Represents a filter for string types
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.StringFilter.VIBlend#WPF#Controls#IFilterBase#Evaluate(System.Object)">
            <summary>
            Evaluates the filter against a specific value
            </summary>
            <param name="value">The value to evaluate</param>
            <returns>Returns true if the value passes through the filter. Otherwise false.</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.StringFilter.Value">
            <summary>
            Gets or sets the value of the filter
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.StringFilter.ComparisonOperator">
            <summary>
            Gets or sets the comparision operator of the filter
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.NumericComparisonOperator">
            <summary>
            Enumaration of the Numeric filter comparison operators
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.EQUAL">
            <summary>
            Equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.NOT_EQUAL">
            <summary>
            Not equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.LESS_THAN">
            <summary>
            Less than
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.LESS_THAN_OR_EQUAL">
            <summary>
            Less than or equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.GREATER_THAN">
            <summary>
            Greater than
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.GREATER_THAN_OR_EQUAL">
            <summary>
            Greater than or equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.NULL">
            <summary>
            NULL value
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.NumericComparisonOperator.NOT_NULL">
            <summary>
            Non-Null value
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.NumericFilter">
            <summary>
            Represents a numeric filter
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.NumericFilter.VIBlend#WPF#Controls#IFilterBase#Evaluate(System.Object)">
            <summary>
            Evaluates the filter against a specific value
            </summary>
            <param name="value">The value to evaluate</param>
            <returns>Returns true if the value passes through the filter. Otherwise false.</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.NumericFilter.Value">
            <summary>
            Gets or sets the value of the filter
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.NumericFilter.ComparisonOperator">
            <summary>
            Gets or sets the comparison operator of the filter
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DateTimeComparisonOperator">
            <summary>
            Enumaration of the DateTime filter comparison operators
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.EQUAL">
            <summary>
            Equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.NOT_EQUAL">
            <summary>
            Not equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.LESS_THAN">
            <summary>
            Less than
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.LESS_THAN_OR_EQUAL">
            <summary>
            Less than or equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.GREATER_THAN">
            <summary>
            Greater than
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.GREATER_THAN_OR_EQUAL">
            <summary>
            Greater than or equal
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.NULL">
            <summary>
            NULL value
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DateTimeComparisonOperator.NOT_NULL">
            <summary>
            Non-Null value
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.DateTimeFilter">
            <summary>
            Represents a DateTime filter
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DateTimeFilter.VIBlend#WPF#Controls#IFilterBase#Evaluate(System.Object)">
            <summary>
            Evaluates the filter against a specific value
            </summary>
            <param name="value">The value to evaluate</param>
            <returns>Returns true if the value passes through the filter. Otherwise false.</returns>
        </member>
        <member name="P:VIBlend.WPF.Controls.DateTimeFilter.Value">
            <summary>
            Gets or sets the value of the filter
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DateTimeFilter.ComparisonOperator">
            <summary>
            Gets or sets the comparison operator of the filter
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.SetFilter`1">
            <summary>
            Represents a Filter that uses a set of filter items with true and false states.
            </summary>
        </member>
        <member name="T:VIBlend.WPF.Controls.CellDataAggregationEventArgs">
            <summary>
            Represents a CellDataAggregation event data.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.CellDataAggregationEventArgs.#ctor(VIBlend.WPF.Controls.HierarchyItem,VIBlend.WPF.Controls.HierarchyItem,System.Object[],System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.CellDataAggregationEventArgs"/> class.
            </summary>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <param name="drillThroughRows">The drill through rows.</param>
            <param name="drillThroughCellValues">The drill through cell values.</param>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellDataAggregationEventArgs.DrillThroughRows">
            <summary>
            Gets the drill through rows.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellDataAggregationEventArgs.DrillThroughCellValues">
            <summary>
            Gets the drill through cell values.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellDataAggregationEventArgs.RowItem">
            <summary>
            Gets the row item.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellDataAggregationEventArgs.ColumnItem">
            <summary>
            Gets the column item.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.CellDataAggregationEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:VIBlend.WPF.Controls.DataGridGroupsHeader">
            <summary>
            Represents a panel which displays the DataGrid grouping columns.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.HeaderBackgroundName">
            <summary>
            Repretents DataGridGroupsHeader Header Area Background.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderBorderName">
            <summary>
            Repretents DataGridGroupsHeader Border.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderHeaderLayoutName">
            <summary>
            Represents DataGridGroupsHeader Grid layout panel.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderContentLayoutName">
            <summary>
            Represents DataGridGroupsHeader Grid content layout panel
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderLayoutRootName">
            <summary>
            Represents DataGridGroupsHeader Root element.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderHeaderAreaName">
            <summary>
            Represents the Header Area name.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderLayoutRoot">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.layoutPanel">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.headerBackground">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderBorder">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderHeaderLayout">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderContentLayout">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderHeaderArea">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.HeaderBackgroundProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.HeaderBorderBrushProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.TextProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.HeaderBorderThicknessProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            true if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.SetCloseButtonVisibility(System.Windows.Visibility)">
            <summary>
            Sets the close button visibility.
            </summary>
            <param name="visibility">The visibility.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderItemTemplateTemplateProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.ItemContainerStyleProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.OnItemContainerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            NavigationPane that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> property changes.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> that contains the event data</param>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.GetAssociatedItem(VIBlend.WPF.Controls.DataGridGroupsHeaderItem)">
            <summary>
            Gets the associated item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.GetParentWindow(System.Windows.DependencyObject)">
            <summary>
            Gets the parent window.
            </summary>
            <param name="child">The child.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"/> method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item.</param>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.CornerRadiusProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.WPF.Controls.DataGridGroupsHeader"/> class.
            </summary>
        </member>
        <member name="F:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.WireEvents">
            <summary>
            Wires the events.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.OnGroupingColumnsCollectionChanged">
            <summary>
            Raises the GroupingColumnsCollectionChanged event.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.RenderGroups">
            <summary>
            Renders the groups.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.UnwireEvents(VIBlend.WPF.Controls.DataGrid)">
            <summary>
            Unwires the events.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:VIBlend.WPF.Controls.DataGridGroupsHeader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.HeaderBackground">
            <summary>
            Gets or sets the header background.
            </summary>
            <value>The header background.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.HeaderBorderBrush">
            <summary>
            Gets or sets the header border brush.
            </summary>
            <value>The header border brush.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.Text">
            <summary>
            Gets or sets the prompt text
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.HeaderBorderThickness">
            <summary>
            Gets or sets the header border thickness.
            </summary>
            <value>The header border thickness.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGridGroupsHeaderItemTemplate">
            <summary>
            Gets or sets the tab item template.
            </summary>
            <value>The tab item template.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.ItemsControlHelper">
            <exclude/>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.ItemContainerStyle">
            <summary>
            Gets or sets the item container style.
            </summary>
            <value>The item container style.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.CornerRadius">
            <summary>
            Gets or sets corner radius.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.DataGrid">
            <summary>
            Gets or sets the fields area visibility.
            </summary>
            <value>The fields area visibility.</value>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.AutoResizeAfterGrouping">
            <summary>
            Gets or sets whether to auto-size Grid columns after a grouping operation.
            </summary>
        </member>
        <member name="E:VIBlend.WPF.Controls.DataGridGroupsHeader.GroupingColumnsCollectionChanged">
            <summary>
            Occurs when the grouping columns collection is changed.
            </summary>
        </member>
        <member name="P:VIBlend.WPF.Controls.DataGridGroupsHeader.IsLoaded">
            <summary>
            Gets or sets a value indicating whether this instance is loaded.
            </summary>
            <value><c>true</c> if this instance is loaded; otherwise, <c>false</c>.</value>
        </member>
    </members>
</doc>
