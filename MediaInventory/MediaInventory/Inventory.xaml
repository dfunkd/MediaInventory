<Window x:Class="MediaInventory.Inventory"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:local="clr-namespace:MediaInventory"
        xmlns:uc="clr-namespace:MediaInventory.UserControls"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Icon="./Resources/Icons/SkullAndBones.ico"
        Title="Inventory"
        AllowsTransparency="True"
        Background="Transparent"
        Height="750"
        ResizeMode="NoResize"
        Width="1000"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Visibility="Collapsed"
        x:Name="inventory">

    <Window.Resources>
        <CollectionViewSource x:Key="cvsMovies" />
        <Storyboard x:Key="ClosingStoryboard">
            <DoubleAnimation Duration="00:00:01" From="750" Storyboard.TargetName="brdMain" Storyboard.TargetProperty="Height" To="0"/>
            <DoubleAnimation Duration="00:00:01" From="1000" Storyboard.TargetName="brdMain" Storyboard.TargetProperty="Width" To="0"/>
            <DoubleAnimation Duration="00:00:01" From="1" Storyboard.TargetName="zoom" Storyboard.TargetProperty="ScaleX" To="0"/>
            <DoubleAnimation Duration="00:00:01" From="1" Storyboard.TargetName="zoom" Storyboard.TargetProperty="ScaleY" To="0"/>
        </Storyboard>        
    </Window.Resources>
    <Window.RenderTransform>
        <ScaleTransform x:Name="zoom" ScaleX="1" ScaleY="1" />
    </Window.RenderTransform>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:01" From="0" Storyboard.TargetName="brdMain" Storyboard.TargetProperty="Height" To="750"/>
                        <DoubleAnimation Duration="00:00:01" From="0" Storyboard.TargetName="brdMain" Storyboard.TargetProperty="Width" To="1000"/>
                        <DoubleAnimation Duration="00:00:01" From="0" Storyboard.TargetName="zoom" Storyboard.TargetProperty="ScaleX" To="1"/>
                        <DoubleAnimation Duration="00:00:01" From="0" Storyboard.TargetName="zoom" Storyboard.TargetProperty="ScaleY" To="1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
    </Window.Triggers>

    <Border x:Name="brdMain" Background="#FF373737" BorderBrush="Black" BorderThickness="1" CornerRadius="5" MouseLeftButtonDown="DragWindow">
        <DockPanel LastChildFill="True">
            <DockPanel x:Name="dpMenu" DockPanel.Dock="Top" Background="#FF373737" LastChildFill="False" Margin="5">
                <Button x:Name="btnLogin" DockPanel.Dock="Left" Margin="5" Style="{DynamicResource NormalExpandingButtonStyle}" Content="Login" Command="local:Inventory.Login">
                    <Button.CommandBindings>
                        <CommandBinding Command="local:Inventory.Login" CanExecute="CanLogin" Executed="LoginExecuted" />
                    </Button.CommandBindings>
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <Button x:Name="btnSearch" DockPanel.Dock="Left" Margin="5" Style="{DynamicResource NormalExpandingButtonStyle}" Content="Search Inventory" Command="local:Inventory.SearchInventory">
                    <Button.CommandBindings>
                        <CommandBinding Command="local:Inventory.SearchInventory" CanExecute="CanSearchInventory" Executed="SearchInventoryExecuted" />
                    </Button.CommandBindings>
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <Button x:Name="btnAdd" DockPanel.Dock="Left" Margin="5" Style="{DynamicResource NormalExpandingButtonStyle}" Content="Add Inventory" Command="local:Inventory.AddInventory">
                    <Button.CommandBindings>
                        <CommandBinding Command="local:Inventory.AddInventory" CanExecute="CanAddInventory" Executed="AddInventoryExecuted" />
                    </Button.CommandBindings>
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <Button x:Name="btnEdit" DockPanel.Dock="Left" Margin="5" Style="{DynamicResource NormalExpandingButtonStyle}" Content="Edit Inventory" Command="local:Inventory.EditInventory">
                    <Button.CommandBindings>
                        <CommandBinding Command="local:Inventory.EditInventory" CanExecute="CanEditInventory" Executed="EditInventoryExecuted" />
                    </Button.CommandBindings>
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <Button x:Name="btnClose" DockPanel.Dock="Right" Margin="5" Style="{DynamicResource CancelExpandingButtonStyle}" Content="Close" Command="local:Inventory.CloseApplication">
                    <Button.CommandBindings>
                        <CommandBinding Command="local:Inventory.CloseApplication" CanExecute="CanCloseApplication" Executed="CloseApplicationExecuted" />
                    </Button.CommandBindings>
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <Button x:Name="btnLogout" DockPanel.Dock="Right" Margin="5" Style="{DynamicResource CancelExpandingButtonStyle}" Content="Logout" Command="local:Inventory.Logout">
                    <Button.CommandBindings>
                        <CommandBinding Command="local:Inventory.Logout" CanExecute="CanLogout" Executed="LogoutExecuted" />
                    </Button.CommandBindings>
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
            </DockPanel>
            <DockPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" LastChildFill="False" Margin="5">
                <Canvas DockPanel.Dock="Left" Width="24" Height="24" ToolTip="{Binding ElementName=inventory, Path=LoginToolTip}">
                    <!-- Base color -->
                    <Ellipse>
                        <Ellipse.Style>
                            <Style TargetType="{x:Type Ellipse}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=inventory, Path=IsLoggedIn}" Value="False">
                                        <Setter Property="Fill">
                                            <Setter.Value>
                                                <RadialGradientBrush GradientOrigin=".5,.8" RadiusX="0.6">
                                                    <GradientStop Color="#FF6A0100" Offset="1" />
                                                    <GradientStop Color="#FFFF000C" Offset="0" />
                                                </RadialGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=inventory, Path=IsLoggedIn}" Value="True">
                                        <Setter Property="Fill">
                                            <Setter.Value>
                                                <RadialGradientBrush GradientOrigin=".5,.8" RadiusX="0.6">
                                                    <GradientStop Color="#FF005502" Offset="1" />
                                                    <GradientStop Color="#FF15D600" Offset="0" />
                                                </RadialGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Height" Value="24" />
                                <Setter Property="Width" Value="24" />
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <!-- Highligh color-->
                    <Ellipse Canvas.Left="3" Canvas.Top="1">
                        <Ellipse.Style>
                            <Style TargetType="{x:Type Ellipse}">
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#00000000" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Height" Value="15" />
                                <Setter Property="Width" Value="18" />
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </Canvas>
                <TextBlock DockPanel.Dock="Left" Foreground="{DynamicResource TextBlockForeground}" Margin="5, 0" VerticalAlignment="Center"
                           Text="{Binding ElementName=inventory, Path=CurrentUserAndRole, Converter={StaticResource NullToStringConverter}, ConverterParameter='Logged Out'}" />
                <Button DockPanel.Dock="Right" Background="Transparent" BorderBrush="Transparent" Style="{DynamicResource TransparentExpandingButtonStyle}" Command="local:Inventory.OpenSettings">
                    <Button.CommandBindings>
                        <CommandBinding Command="local:Inventory.OpenSettings" CanExecute="CanOpenSettings" Executed="OpenSettingsExecuted" />
                    </Button.CommandBindings>
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                    <Image Source="Resources/Icons/SilverGear.ico" Height="32" Width="32" />
                </Button>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                <ContentControl x:Name="ccMain" DockPanel.Dock="Top" />
            </DockPanel>
        </DockPanel>
    </Border>
</Window>